{"version":3,"file":"chromatic","sources":["../src/errors.ts","../src/utils.ts","../src/default-formatters.ts","../src/formats.ts","../src/ok-color.ts","../src/value.ts","../src/terminal.ts","../src/color-functions.ts","../src/value-parser.ts","../src/formats-generic.ts","../src/formats-web.ts","../src/formats-styleguide.ts","../src/chromatic.ts","../src/chromatic-cli.ts"],"sourcesContent":["export enum ErrorCode {\n  NoError = 0,\n  SyntaxError,\n\n  UnexpectedOpenBracket,\n  ExpectedCloseBracket,\n  ExpectedCloseCurlyBracket,\n  ExpectedOpenParen,\n  ExpectedCloseParen,\n  ExpectedQuote,\n\n  UnknownToken,\n  UnknownUnit,\n\n  UnknownFunction,\n  MissingArgument,\n  ExpectedArgument,\n  TooManyArguments,\n  InvalidArgument,\n\n  ExpectedOperand,\n  InvalidOperand,\n  InvalidUnaryOperand,\n\n  ExpectedIntegerIndex,\n\n  CircularDefinition,\n  UnexpectedTokensArray,\n  UnexpectedTokensType,\n  InvalidTokenName,\n  InvalidTokenValue,\n  InconsistentTokenType,\n  UnknownFormat,\n  UnknownValueFormatter,\n  UnknownNameFormatter,\n}\n\nconst ERRORS = {\n  [ErrorCode.SyntaxError]: 'Syntax error',\n\n  [ErrorCode.UnexpectedOpenBracket]: 'Unexpected `[`',\n  [ErrorCode.ExpectedCloseBracket]: 'Expected `]`',\n  [ErrorCode.ExpectedCloseCurlyBracket]: 'Expected `}`',\n  [ErrorCode.ExpectedOpenParen]: 'Expected `(`',\n  [ErrorCode.ExpectedCloseParen]: 'Expected `)`',\n  [ErrorCode.ExpectedQuote]: 'Expected `\"`',\n\n  [ErrorCode.UnknownToken]: 'Unknown token `%1`%2',\n\n  [ErrorCode.UnknownUnit]: 'Unknown unit `%1`',\n\n  [ErrorCode.UnknownFunction]: 'Unknown function `%1`%2',\n  [ErrorCode.MissingArgument]: 'Missing argument %1 of `%2` of type `%3`',\n  [ErrorCode.ExpectedArgument]:\n    'Expected argument %1 of `%2` to be of type `%3`',\n  [ErrorCode.TooManyArguments]: 'Too many arguments for function `%1(%2)`',\n  [ErrorCode.InvalidArgument]: 'Invalid argument `%2` for function `%1`%3',\n\n  [ErrorCode.ExpectedOperand]: 'Expected operand',\n  [ErrorCode.InvalidOperand]: 'Invalid operand',\n  [ErrorCode.InvalidUnaryOperand]: 'Invalid operand',\n\n  [ErrorCode.CircularDefinition]: 'Circular definition of the \"%1\" token',\n  [ErrorCode.UnexpectedTokensArray]:\n    'The \"tokens\" property is an array. It should be a key/value map of tokens.\\n%1',\n  [ErrorCode.UnexpectedTokensType]:\n    'The \"tokens\" property should be a key/value map of tokens.',\n  [ErrorCode.InvalidTokenName]:\n    'Invalid token name \"%1\": it must only contain digits, letters, \"_\" and \"-\"',\n  [ErrorCode.InvalidTokenValue]:\n    'The \"%1\" token is invalid. If using a YAML file, make sure RGB hex values are within quotes',\n  [ErrorCode.InconsistentTokenType]:\n    'Inconsistent token type in valus of token \"%1\"',\n  [ErrorCode.UnknownFormat]: 'Unknown format \"%1\"%2',\n  [ErrorCode.UnknownValueFormatter]: 'Unknown value formatter \"%1\"%2',\n  [ErrorCode.UnknownNameFormatter]: 'Unknown name formatter \"%1\"%2',\n  [ErrorCode.ExpectedIntegerIndex]: 'Expected array index to be a number',\n};\n\nexport class SyntaxError extends Error {\n  code: ErrorCode;\n  args: string[];\n  constructor(code: ErrorCode, ...args: string[]) {\n    super(ERRORS[code]);\n    this.code = code;\n    this.args = args;\n  }\n}\nexport function throwErrorIf(\n  condition: boolean,\n  code: number,\n  ...args: string[]\n): void {\n  if (condition) throwErrorWithContext(undefined, code, ...args);\n}\n\nexport function throwError(code: number, ...args: string[]): void {\n  throwErrorWithContext(undefined, code, ...args);\n}\n\nexport function throwErrorWithContext(\n  context: string[],\n  code: number,\n  ...args: string[]\n): void {\n  let message = '';\n  if (process.env.TEST) {\n    message = '[ERR] ' + (ErrorCode[code] ?? code);\n  } else {\n    if (context) message = context.join('\\n') + '\\n';\n    message += ERRORS[code];\n    args.forEach((val, index) => {\n      message = message.replace(new RegExp(`%${index + 1}`, 'g'), val);\n    });\n  }\n  throw new Error(message);\n}\n","const stringSimilarity = require('string-similarity');\n\nexport function findClosestKey(\n  key: string,\n  o: Record<string, unknown> | Map<string, unknown> | string[]\n): string {\n  if (!key || !o) return '';\n  let keys: string[];\n  if (o instanceof Map) {\n    keys = Array.from(o.keys());\n  } else if (Array.isArray(o)) {\n    keys = o;\n  } else {\n    keys = Object.keys(o);\n  }\n  if (keys.length === 0) return '';\n  const result = stringSimilarity.findBestMatch(key, keys);\n  return result.bestMatch.rating > 0.1 ? result.bestMatch.target : '';\n}\n\nexport function getSuggestion(\n  key: string,\n  o: Record<string, unknown> | Map<string, unknown> | string[]\n): string {\n  const alt = findClosestKey(key, o);\n  return alt ? `. Did you mean \"${alt}\"?` : '';\n}\n","import { Value } from './value';\n\nexport const DefaultFormatters = {\n  nameFormatters: {\n    camelcase: (name: string, theme: string): string =>\n      (name + !theme ? '' : '.' + theme)\n        .toLowerCase()\n        .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (ltr, idx) =>\n          idx === 0 ? ltr.toLowerCase() : ltr.toUpperCase()\n        )\n        .replace(/\\s+/g, ''),\n    kebabcase: (name: string, theme: string): string =>\n      (name + !theme ? '' : '.' + theme)\n        .match(/[A-Z]{2,}(?=[A-Z][a-z0-9]*|\\b)|[A-Z]?[a-z0-9]*|[A-Z]|[0-9]+/g)\n        .filter(Boolean)\n        .map((x) => x.toLowerCase())\n        .join('-'),\n    uppercase: (name: string, theme: string): string =>\n      (name + !theme ? '' : '.' + theme).toUpperCase(),\n    lowercase: (name: string, theme: string): string =>\n      (name + !theme ? '' : '.' + theme).toLowerCase(),\n  },\n  handlebarsHelpers: {\n    'uppercase': (s: string): string => s.toUpperCase(),\n\n    /**\n     * Replace any invalid characters with a '-'\n     * \"{{sanitizeCssPropertyName \"foo.bar\"}} -> \"foo-bar\"\n     */\n\n    'sanitizeCssPropertyName': (s: string): string =>\n      s.replace(/[^a-zA-Z0-9_-]/g, '-'),\n\n    /**\n     * Return a CSS formatted representation of the value\n     */\n\n    'cssValue': (v: Value): string => v?.css() ?? '[MISSING VALUE]',\n\n    /**\n     * In a list (\\n separated lines), remove the trailing \",\"\n     * on the last line that has one.\n     * This is useful for JSON lists for example.\n     */\n\n    'remove-last-comma': function (context: {\n      fn: (arg0: any) => string;\n    }): string {\n      const lines = context.fn(this).split('\\n');\n      const lastCommaLine = lines.reduce(\n        (acc, v, idx) => (/,$/.test(v) ? idx : acc),\n        -1\n      );\n      return lines\n        .map((line, idx) => (idx !== lastCommaLine ? line : line.slice(0, -1)))\n        .join('\\n');\n    },\n\n    /** Usage:\n     * {{comment property}} -> \"/* value of property * /\"\n     * {{comment property \"# \"}} -> \"# value of property\"\n     * {{comment property \"    # \"}}} -> \"    # value of property\"\n     * {{comment property \"//}} -> \"// value of property\"\n     */\n\n    'comment': function (s: string, format = '/* */'): string {\n      if (typeof s !== 'string') {\n        return this.comment;\n      }\n      if (!s) return '';\n      // If there's only one argument passed to the helper\n      // (i.e. {{comment foo}}) the second argument passed in is a context\n      // object\n      if (typeof format !== 'string') format = '/* */';\n      const prefix = format.match(/(\\s*)/)?.[1] ?? '';\n      const suffix = format.slice(prefix.length);\n      let [open, close] = suffix.split(' ');\n      if (open === '/*' && close === '*/') {\n        return (\n          prefix +\n          '/* ' +\n          s.split('\\n').join('\\n' + prefix + ' * ') +\n          '\\n' +\n          prefix +\n          ' */'\n        );\n      }\n      if (!close) {\n        open = format.slice(prefix.length);\n        close = '';\n      }\n      return (\n        prefix + open + s.split('\\n').join((close ?? '') + '\\n' + prefix + open)\n      );\n    },\n  },\n};\n","import { Value, ValueType } from './value';\n\nexport interface TokenDefinition {\n  value: {\n    /* Value for the base theme */\n    _?: string;\n\n    /* Value for the other themes */\n    [theme: string]: string;\n  };\n\n  /** Type hint. The type is usually inferred from the value. */\n  type?: ValueType;\n\n  /* Single line, plain text recommended */\n  /* Output in the generated files */\n\n  comment?: string;\n\n  /* Multiple lines or paragraphs. Markdown recommended */\n  /* Output in the generated documentation */\n  remarks?: string;\n\n  /* When this token has been deprecated, what replaces it, or when will it be removed. */\n  deprecated?: string;\n  [key: string]: unknown;\n}\n\nexport interface TokenGroupInfo {\n  name?: string;\n  comment?: string;\n  remarks?: string;\n}\n\nexport interface RenderContext {\n  /** The path of this output file*/\n  filepath: string;\n\n  /** Header for this file. May be multiple lines. */\n  fileHeader: string;\n\n  /** For each token group, */\n  groups: {\n    /** ID, for example: \"brand.marketing\" */\n    groupId: string;\n    /** Info, such as comments, etc.. about the group */\n    groupInfo: TokenGroupInfo;\n    /** Array of tokens in this group */\n    tokens: {\n      isColor: boolean;\n      /** ID, such as \"semantic.error\" */\n      tokenId: string;\n      /** Info, such as comments, etc... about the token */\n      tokenDefinition: TokenDefinition;\n      /** Array of themes supported by the token */\n      themes: {\n        theme: string;\n        /** Token with theme, for example \"semantic.error.dark\" */\n        tokenName: string;\n        /** The Value for this token/theme */\n        tokenValue: Value;\n      }[];\n    }[];\n  }[];\n\n  /** For each themes */\n  themes: {\n    theme: string;\n    isDefaultTheme: boolean; // True if theme === '_', but stored as a\n    // boolean here for ease of access in handlerbars templates\n    tokens: {\n      /** ID, such as \"semantic.error\" */\n      tokenId: string;\n      /** Info, such as comments, etc... about the token */\n      tokenDefinition: TokenDefinition;\n      /** Token with theme, for example \"semantic.error.dark\" */\n      tokenName: string;\n      /** The Value for this token/theme */\n      tokenValue: Value;\n    }[];\n  }[];\n  renderTemplate: (template: string, context: any) => string;\n}\n\nexport interface Format {\n  /** The name of a format this format is an extension  of (inherits from) */\n  extends?: string;\n\n  /** Preferred file extension for the generated file(s) for this format,\n   * for example \".txt\"\n   */\n  ext?: string;\n\n  formatFilename?: ({\n    theme,\n    basename,\n  }: {\n    theme: string;\n    basename: string;\n  }) => string;\n\n  /** Header included at the begining of generated files,\n   * such as a warning about not modifying the file or a copyright notice */\n  fileHeader?: string;\n\n  handlebarsHelpers?: { [helper: string]: (...args: any[]) => string };\n\n  render?: (context: RenderContext) => string;\n  [key: string]: unknown;\n}\n\nexport const DEFAULT_FILE_HEADER = `\nThis file was automatically generated by Chromatic.\nDo not edit.\nGenerated ${new Date().toISOString()}\n`;\n","// MIT-licensed algorithms by Björn Ottosson, ported to TypeScript.\n// Source: “Two new color spaces for color picking – Okhsv & Okhsl” and ok_color.h.  [oai_citation:0‡bottosson.github.io](https://bottosson.github.io/posts/colorpicker/) [oai_citation:1‡GitLab](https://inkscape.gitlab.io/inkscape/doxygen/ok-color_8cpp_source.html)\n\nexport type RGB = { r: number; g: number; b: number }; // 0..1 (nonlinear sRGB where noted)\nexport type Lab = { L: number; a: number; b: number };\nexport type HSV = { h: number; s: number; v: number }; // h in [0,1), s,v in [0,1]\nexport type LCH = { L: number; C: number; H: number }; // H in degrees [0,360)\n\ntype LC = { L: number; C: number };\ntype ST = { S: number; T: number };\n\nconst pi = Math.PI;\n\n// Clamp a number to [0,1]\nfunction clamp01(x: number): number {\n  return x < 0 ? 0 : x > 1 ? 1 : x;\n}\n\n// sRGB companding (encode from linear to sRGB)\nfunction srgbTransfer(a: number): number {\n  return a <= 0.0031308 ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - 0.055;\n}\n\n// sRGB inverse companding (decode sRGB to linear)\nfunction srgbTransferInv(a: number): number {\n  return a <= 0.04045 ? a / 12.92 : Math.pow((a + 0.055) / 1.055, 2.4);\n}\n\n// Oklab ← linear sRGB\nfunction linearSrgbToOklab(c: RGB): Lab {\n  const l = 0.4122214708 * c.r + 0.5363325363 * c.g + 0.0514459929 * c.b;\n  const m = 0.2119034982 * c.r + 0.6806995451 * c.g + 0.1073969566 * c.b;\n  const s = 0.0883024619 * c.r + 0.2817188376 * c.g + 0.6299787005 * c.b;\n\n  const l_ = Math.cbrt(l);\n  const m_ = Math.cbrt(m);\n  const s_ = Math.cbrt(s);\n\n  return {\n    L: 0.2104542553 * l_ + 0.793617785 * m_ - 0.0040720468 * s_,\n    a: 1.9779984951 * l_ - 2.428592205 * m_ + 0.4505937099 * s_,\n    b: 0.0259040371 * l_ + 0.7827717662 * m_ - 0.808675766 * s_,\n  };\n}\n\n// linear sRGB ← Oklab\nfunction oklabToLinearSrgb(c: Lab): RGB {\n  const l_ = c.L + 0.3963377774 * c.a + 0.2158037573 * c.b;\n  const m_ = c.L - 0.1055613458 * c.a - 0.0638541728 * c.b;\n  const s_ = c.L - 0.0894841775 * c.a - 1.291485548 * c.b;\n\n  const l = l_ * l_ * l_;\n  const m = m_ * m_ * m_;\n  const s = s_ * s_ * s_;\n\n  return {\n    r: +4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s,\n    g: -1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s,\n    b: -0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s,\n  };\n}\n\n// toe and inverse (for L_r)\nfunction toe(x: number): number {\n  const k1 = 0.206;\n  const k2 = 0.03;\n  const k3 = (1 + k1) / (1 + k2);\n  const t = k3 * x - k1;\n  return 0.5 * (t + Math.sqrt(t * t + 4 * k2 * k3 * x));\n}\nfunction toeInv(x: number): number {\n  const k1 = 0.206;\n  const k2 = 0.03;\n  const k3 = (1 + k1) / (1 + k2);\n  return (x * x + k1 * x) / (k3 * (x + k2));\n}\n\nfunction toST(cusp: LC): ST {\n  const { L, C } = cusp;\n  return { S: C / L, T: C / (1 - L) };\n}\n\n// Max saturation S = C/L for a given hue direction (a,b) normalized\nfunction computeMaxSaturation(a: number, b: number): number {\n  let k0: number, k1: number, k2: number, k3: number, k4: number;\n  let wl: number, wm: number, ws: number;\n\n  if (-1.88170328 * a - 0.80936493 * b > 1) {\n    // red\n    k0 = 1.19086277;\n    k1 = 1.76576728;\n    k2 = 0.59662641;\n    k3 = 0.75515197;\n    k4 = 0.56771245;\n    wl = 4.0767416621;\n    wm = -3.3077115913;\n    ws = 0.2309699292;\n  } else if (1.81444104 * a - 1.19445276 * b > 1) {\n    // green\n    k0 = 0.73956515;\n    k1 = -0.45954404;\n    k2 = 0.08285427;\n    k3 = 0.1254107;\n    k4 = 0.14503204;\n    wl = -1.2684380046;\n    wm = 2.6097574011;\n    ws = -0.3413193965;\n  } else {\n    // blue\n    k0 = 1.35733652;\n    k1 = -0.00915799;\n    k2 = -1.1513021;\n    k3 = -0.50559606;\n    k4 = 0.00692167;\n    wl = -0.0041960863;\n    wm = -0.7034186147;\n    ws = 1.707614701;\n  }\n\n  // polynomial approx\n  let S = k0 + k1 * a + k2 * b + k3 * a * a + k4 * a * b;\n\n  // one Halley step\n  const k_l = 0.3963377774 * a + 0.2158037573 * b;\n  const k_m = -0.1055613458 * a - 0.0638541728 * b;\n  const k_s = -0.0894841775 * a - 1.291485548 * b;\n\n  const l_ = 1 + S * k_l;\n  const m_ = 1 + S * k_m;\n  const s_ = 1 + S * k_s;\n\n  const l = l_ * l_ * l_;\n  const m = m_ * m_ * m_;\n  const s = s_ * s_ * s_;\n\n  const l_dS = 3 * k_l * l_ * l_;\n  const m_dS = 3 * k_m * m_ * m_;\n  const s_dS = 3 * k_s * s_ * s_;\n\n  const l_dS2 = 6 * k_l * k_l * l_;\n  const m_dS2 = 6 * k_m * k_m * m_;\n  const s_dS2 = 6 * k_s * k_s * s_;\n\n  const f = wl * l + wm * m + ws * s;\n  const f1 = wl * l_dS + wm * m_dS + ws * s_dS;\n  const f2 = wl * l_dS2 + wm * m_dS2 + ws * s_dS2;\n\n  S = S - (f * f1) / (f1 * f1 - 0.5 * f * f2);\n  return S;\n}\n\n// Cusp for normalized hue direction (a_, b_)\nfunction findCusp(a_: number, b_: number): LC {\n  const S_cusp = computeMaxSaturation(a_, b_);\n  const rgbAtMax = oklabToLinearSrgb({ L: 1, a: S_cusp * a_, b: S_cusp * b_ });\n  const denom = Math.max(rgbAtMax.r, Math.max(rgbAtMax.g, rgbAtMax.b));\n  const L_cusp = Math.cbrt(1 / denom);\n  const C_cusp = L_cusp * S_cusp;\n  return { L: L_cusp, C: C_cusp };\n}\n\n// Helpers for direct OKLCh → sRGB conversion\nfunction labFromLch(L: number, C: number, Hdeg: number): Lab {\n  const rad = ((Hdeg % 360) * Math.PI) / 180;\n  return { L, a: C * Math.cos(rad), b: C * Math.sin(rad) };\n}\n\nfunction isInGamut(rgb: RGB): boolean {\n  return (\n    rgb.r >= 0 &&\n    rgb.r <= 1 &&\n    rgb.g >= 0 &&\n    rgb.g <= 1 &&\n    rgb.b >= 0 &&\n    rgb.b <= 1\n  );\n}\n\n// -------- Public API: okhsv ↔ sRGB (nonlinear) --------\n\nexport function okhsvToSrgb(hsv: HSV): RGB {\n  const h = hsv.h; // 0..1\n  const s = hsv.s;\n  const v = hsv.v;\n\n  const eps = 1e-9;\n  // Fast paths for edge cases\n  if (v <= eps) {\n    return { r: 0, g: 0, b: 0 };\n  }\n  if (s <= eps) {\n    const Lgray = toeInv(v);\n    const rgbGrayLin = oklabToLinearSrgb({ L: Lgray, a: 0, b: 0 });\n    return {\n      r: srgbTransfer(clamp01(rgbGrayLin.r)),\n      g: srgbTransfer(clamp01(rgbGrayLin.g)),\n      b: srgbTransfer(clamp01(rgbGrayLin.b)),\n    };\n  }\n\n  const a_ = Math.cos(2 * pi * h);\n  const b_ = Math.sin(2 * pi * h);\n\n  const cusp = findCusp(a_, b_);\n  const { S: S_max, T: T_max } = toST(cusp);\n  const S_0 = 0.5;\n  const k = 1 - S_0 / S_max;\n\n  // triangle model\n  const denom = S_0 + T_max - T_max * k * s;\n  const L_v = 1 - (s * S_0) / denom;\n  const C_v = (s * T_max * S_0) / denom;\n\n  let L = v * L_v;\n  let C = v * C_v;\n\n  // toe + curved top compensation\n  const L_vt = toeInv(L_v);\n  const C_vt = (C_v * L_vt) / L_v;\n\n  let L_new = toeInv(L);\n  if (L > 0) {\n    C = (C * L_new) / L;\n  } else {\n    C = 0;\n  }\n  L = L_new;\n\n  const rgbScale = oklabToLinearSrgb({ L: L_vt, a: a_ * C_vt, b: b_ * C_vt });\n  const scale_L = Math.cbrt(\n    1 / Math.max(1e-12, Math.max(rgbScale.r, Math.max(rgbScale.g, rgbScale.b)))\n  );\n\n  L *= scale_L;\n  C *= scale_L;\n\n  const rgbLin = oklabToLinearSrgb({ L, a: C * a_, b: C * b_ });\n  return {\n    r: srgbTransfer(clamp01(rgbLin.r)),\n    g: srgbTransfer(clamp01(rgbLin.g)),\n    b: srgbTransfer(clamp01(rgbLin.b)),\n  };\n}\n\nexport function srgbToOkhsv(rgb: RGB): HSV {\n  // to linear\n  const lin: RGB = {\n    r: srgbTransferInv(rgb.r),\n    g: srgbTransferInv(rgb.g),\n    b: srgbTransferInv(rgb.b),\n  };\n  const lab = linearSrgbToOklab(lin);\n\n  const C = Math.sqrt(lab.a * lab.a + lab.b * lab.b);\n  // If you want to avoid NaNs for grays, early-return here when C === 0.\n  const a_ = lab.a / C;\n  const b_ = lab.b / C;\n\n  let L = lab.L;\n  const h = 0.5 + (0.5 * Math.atan2(-lab.b, -lab.a)) / pi;\n\n  const cusp = findCusp(a_, b_);\n  const { S: S_max, T: T_max } = toST(cusp);\n  const S_0 = 0.5;\n  const k = 1 - S_0 / S_max;\n\n  // find L_v, C_v, L_vt, C_vt\n  const t = T_max / (C + L * T_max);\n  const L_v = t * L;\n  const C_v = t * C;\n\n  const L_vt = toeInv(L_v);\n  const C_vt = (C_v * L_vt) / L_v;\n\n  const rgbScale = oklabToLinearSrgb({ L: L_vt, a: a_ * C_vt, b: b_ * C_vt });\n  const scale_L = Math.cbrt(\n    1 / Math.max(0, Math.max(rgbScale.r, Math.max(rgbScale.g, rgbScale.b)))\n  );\n\n  L /= scale_L;\n  let C2 = C / scale_L;\n\n  C2 = (C2 * toe(L)) / L;\n  L = toe(L);\n\n  const v = L / L_v;\n  const s = ((S_0 + T_max) * C_v) / (T_max * S_0 + T_max * k * C_v);\n\n  return { h, s, v };\n}\n\nconst TAU = Math.PI * 2;\n\n// okhsv → oklch\nexport function okhsvToOklch(hsv: HSV): LCH {\n  const { h, s, v } = hsv; // h in [0,1)\n  const a_ = Math.cos(TAU * h);\n  const b_ = Math.sin(TAU * h);\n\n  const cusp = findCusp(a_, b_);\n  const { S: S_max, T: T_max } = toST(cusp);\n  const S_0 = 0.5;\n  const k = 1 - S_0 / S_max;\n\n  // Triangle model (v=1)\n  const denom = S_0 + T_max - T_max * k * s;\n  const L_v = 1 - (s * S_0) / denom;\n  const C_v = (s * T_max * S_0) / denom;\n\n  // Scale to v\n  let L = v * L_v;\n  let C = v * C_v;\n\n  // Toe + curved-top compensation\n  const L_vt = toeInv(L_v);\n  const C_vt = (C_v * L_vt) / L_v;\n\n  const L_new = toeInv(L);\n  C = (C * L_new) / L;\n  L = L_new;\n\n  // Gamut scaling against linear-sRGB\n  const rgbScale = oklabToLinearSrgb({ L: L_vt, a: a_ * C_vt, b: b_ * C_vt });\n  const scale_L = Math.cbrt(\n    1 / Math.max(0, Math.max(rgbScale.r, Math.max(rgbScale.g, rgbScale.b)))\n  );\n\n  L *= scale_L;\n  C *= scale_L;\n\n  const H = (h * 360 + 360) % 360;\n  return { L, C, H };\n}\n\n// oklch → okhsv\nexport function oklchToOkhsv(L: number, C: number, H: number): HSV {\n  const eps = 1e-9;\n  // Hue in [0,1)\n  const h = (((H % 360) + 360) % 360) / 360;\n\n  // Degenerate cases: neutrals or black\n  // - If C≈0: s should be 0, v ≈ L (in the okhsv model)\n  // - If L≈0: black → v=0, s=0\n  if (L <= eps || C <= eps) {\n    return { h, s: 0, v: Math.max(0, Math.min(1, L)) };\n  }\n\n  const a_ = Math.cos(TAU * h);\n  const b_ = Math.sin(TAU * h);\n\n  const cusp = findCusp(a_, b_);\n  const { S: S_max, T: T_max } = toST(cusp);\n  const S_0 = 0.5;\n  const k = 1 - S_0 / S_max;\n\n  // Find L_v, C_v\n  const t = T_max / (C + L * T_max);\n  const L_v = t * L;\n  const C_v = t * C;\n\n  // Toe-inverse versions\n  const L_vt = toeInv(L_v);\n  const C_vt = (C_v * L_vt) / L_v;\n\n  // Gamut scaling (inverse of step used in okhsv→oklch)\n  const rgbScale = oklabToLinearSrgb({ L: L_vt, a: a_ * C_vt, b: b_ * C_vt });\n  const scale_L = Math.cbrt(\n    1 / Math.max(1e-12, Math.max(rgbScale.r, Math.max(rgbScale.g, rgbScale.b)))\n  );\n\n  L /= scale_L;\n  C /= scale_L;\n\n  // Apply toe\n  C = (C * toe(L)) / L;\n  L = toe(L);\n\n  // Recover v and s\n  const v = L / L_v;\n  const s = ((S_0 + T_max) * C_v) / (T_max * S_0 + T_max * k * C_v);\n\n  return { h, s: isFinite(s) ? s : 0, v: isFinite(v) ? v : 0 };\n}\n\n// export function oklchToRgb(\n//   L: number,\n//   C: number,\n//   H: number\n// ): [red: number, green: number, blue: number] {\n//   // Fast path for neutrals\n//   if (C <= 1e-9) {\n//     const rgbLin = oklabToLinearSrgb({ L, a: 0, b: 0 });\n//     return [\n//       255 * clamp01(srgbTransfer(clamp01(rgbLin.r))),\n//       255 * clamp01(srgbTransfer(clamp01(rgbLin.g))),\n//       255 * clamp01(srgbTransfer(clamp01(rgbLin.b))),\n//     ];\n//   }\n\n//   // Try requested chroma first\n//   let lab = labFromLch(L, C, H);\n//   let rgbLin = oklabToLinearSrgb(lab);\n\n//   if (!isInGamut(rgbLin)) {\n//     // Binary search a scale factor on C in [0,1] to bring the color into sRGB gamut\n//     let lo = 0;\n//     let hi = 1;\n//     for (let i = 0; i < 24; i++) {\n//       // ~1e-7 precision\n//       const mid = (lo + hi) / 2;\n//       lab = labFromLch(L, C * mid, H);\n//       rgbLin = oklabToLinearSrgb(lab);\n//       if (isInGamut(rgbLin)) lo = mid;\n//       else hi = mid;\n//     }\n//     // Use the in-gamut side\n//     lab = labFromLch(L, C * lo, H);\n//     rgbLin = oklabToLinearSrgb(lab);\n//   }\n\n//   // Compand and clamp\n//   const r = srgbTransfer(clamp01(rgbLin.r));\n//   const g = srgbTransfer(clamp01(rgbLin.g));\n//   const b = srgbTransfer(clamp01(rgbLin.b));\n//   // Optional: comment out the log if too chatty\n//   // console.log(`OKLCH(${L.toFixed(3)}, ${C.toFixed(3)}, ${H.toFixed(1)}°) → sRGB(${(r*255).toFixed(1)}, ${(g*255).toFixed(1)}, ${(b*255).toFixed(1)})`);\n//   return [255 * r, 255 * g, 255 * b];\n// }\n\nexport function oklchToRgb(\n  l: number,\n  c: number,\n  h: number\n): [number, number, number] {\n  // Convert OKLCh to OKLab\n  const hRad = (h * Math.PI) / 180;\n  const a = c * Math.cos(hRad);\n  const b = c * Math.sin(hRad);\n\n  // OKLab to linear RGB\n  const l_ = l + 0.3963377774 * a + 0.2158037573 * b;\n  const m_ = l - 0.1055613458 * a - 0.0638541728 * b;\n  const s_ = l - 0.0894841775 * a - 1.291485548 * b;\n\n  const l3 = l_ * l_ * l_;\n  const m3 = m_ * m_ * m_;\n  const s3 = s_ * s_ * s_;\n\n  let r = 4.0767416621 * l3 - 3.3077115913 * m3 + 0.2309699292 * s3;\n  let g = -1.2684380046 * l3 + 2.6097574011 * m3 - 0.3413193965 * s3;\n  let b_ = -0.0041960863 * l3 - 0.7034186147 * m3 + 1.707614701 * s3;\n\n  // Apply gamma correction\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n  b_ = b_ > 0.0031308 ? 1.055 * Math.pow(b_, 1 / 2.4) - 0.055 : 12.92 * b_;\n\n  // Clamp to [0, 1]\n  r = Math.max(0, Math.min(1, r));\n  g = Math.max(0, Math.min(1, g));\n  b_ = Math.max(0, Math.min(1, b_));\n\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b_ * 255)];\n}\n\nexport function srgbToOklch(\n  red: number,\n  green: number,\n  blue: number\n): [L: number, C: number, H: number] {\n  // Normalize 8-bit sRGB inputs to 0..1 before conversion\n  const hsv = srgbToOkhsv({ r: red / 255, g: green / 255, b: blue / 255 });\n  const lch = okhsvToOklch(hsv);\n  // Log with explicit units to avoid confusion\n  // console.log(\n  //   `Converted RGB(${Math.round(red)}, ${Math.round(green)}, ${Math.round(\n  //     blue\n  //   )}) to OKLCH(${(lch.L * 100).toFixed(2)}%, ${lch.C.toFixed(\n  //     4\n  //   )}, ${lch.H.toFixed(2)}°)`\n  // );\n  return [lch.L, lch.C, lch.H];\n}\n","const colorName = require('color-name');\n\nimport { throwError, ErrorCode, SyntaxError } from './errors';\n\nimport { srgbToOklch, oklchToRgb } from './ok-color';\n\nexport type ValueType =\n  | 'string'\n  | 'number'\n  | 'percentage'\n  | 'angle'\n  | 'color'\n  | 'length'\n  | 'time'\n  | 'frequency'\n  | 'array';\n\n/**\n * Those are relative units that can't be evaluated statically, as they\n * depend on the rendering environment (the size of the base font of the\n * document, the metrics of the current font, the dimension of the view port.\n * However, it is possible to provide values for those to valueParser,\n * in which case they will get evaluated.\n */\n\nexport interface BaseLengthUnits {\n  rem?: number;\n  em?: number;\n  ex?: number;\n  ch?: number;\n  vh?: number;\n  vw?: number;\n}\n\nexport function clampByte(v: number): number {\n  if (v < 0) return 0;\n  if (v > 255) return 255;\n  return Math.round(v);\n}\n\nexport class Value {\n  private source = '';\n  css(): string {\n    return '';\n  }\n  type(): ValueType {\n    return undefined;\n  }\n  canonicalScalar(): number {\n    return 0;\n  }\n  getSource(): string {\n    return this.source;\n  }\n  setSource(source: string): void {\n    this.source = source;\n  }\n  equals(v: Value): boolean {\n    return (\n      this.type() === v.type() && this.canonicalScalar() == v.canonicalScalar()\n    );\n  }\n  [key: string]: unknown;\n}\n\nexport type LengthUnit =\n  | 'px'\n  | 'cm'\n  | 'mm'\n  | 'Q'\n  | 'in'\n  | 'pc'\n  | 'pt'\n  | 'rem'\n  | 'em'\n  | 'ex'\n  | 'ch'\n  | 'vw'\n  | 'vh'\n  | 'vmin'\n  | 'vmax'\n  | 'multi';\n\nexport type AngleUnit = 'deg' | 'grad' | 'rad' | 'degree' | 'turn';\n\nexport type TimeUnit = 's' | 'ms';\n\nexport type FrequencyUnit = 'hz' | 'khz';\n\nexport function roundTo(num: number, precision: number): number {\n  return (\n    Math.round(num * Math.pow(10, precision) + 1e-14) / Math.pow(10, precision)\n  );\n}\n\nexport class Percentage extends Value {\n  value: number; /* [0..100] */\n  constructor(from: number) {\n    super();\n    this.value = from;\n  }\n  css(): string {\n    return roundTo(this.value, 2) + '%';\n  }\n  type(): ValueType {\n    return 'percentage';\n  }\n  canonicalScalar(): number {\n    return this.value / 100;\n  }\n  equals(v: Value): boolean {\n    if (isLength(v)) {\n      const v1 = promoteToMulti(this);\n      const v2 = promoteToMulti(v);\n      return [...Object.keys(v1.value), ...Object.keys(v2.value)].every(\n        (x) => v1.value[x] === v2.value[x]\n      );\n    }\n\n    return false;\n  }\n}\n\nexport class Angle extends Value {\n  value: number;\n  unit: AngleUnit;\n  constructor(from: number, unit: AngleUnit) {\n    super();\n    this.value = from;\n    this.unit = unit;\n  }\n  css(): string {\n    return roundTo(this.value, 2) + this.unit;\n  }\n  type(): ValueType {\n    return 'angle';\n  }\n  canonicalScalar(): number {\n    return asDegree(this);\n  }\n}\n\nexport interface MultiLength {\n  // Absolute canonical length\n  px?: number;\n\n  // Relative lengths\n  em?: number;\n  ex?: number;\n  ch?: number;\n  rem?: number;\n  vw?: number;\n  vh?: number;\n  vmin?: number;\n  vmax?: number;\n}\n\nexport class Length extends Value {\n  value: number | MultiLength;\n  unit: LengthUnit;\n  constructor(from: number | MultiLength, unit?: LengthUnit) {\n    super();\n    if (typeof from === 'number') {\n      this.value = from;\n      if (from === 0) {\n        this.unit = 'px';\n      } else {\n        this.unit = unit;\n      }\n    } else if (typeof unit === 'undefined') {\n      const nonZeroKeys: LengthUnit[] = Object.keys(from).filter(\n        (x) => typeof from[x] === 'number' && from[x] !== 0\n      ) as LengthUnit[];\n      if (nonZeroKeys.length === 0) {\n        // Everything's zero, return the canonical zero length: 0px\n        this.value = 0;\n        this.unit = 'px';\n      } else if (nonZeroKeys.length === 1) {\n        // A single non-zero unit? Return that unit.\n        this.value = from[nonZeroKeys[0]];\n        this.unit = nonZeroKeys[0];\n      } else {\n        this.value = from;\n        this.unit = 'multi';\n      }\n    } else {\n      // Force promotion to multi\n      this.value = from;\n      this.unit = 'multi';\n      console.assert(unit === 'multi');\n    }\n  }\n  css(): string {\n    if (typeof this.value === 'number') {\n      // If it's a number, display \"0\" and \"NaN\" without units\n      return this.value === 0 || isNaN(this.value)\n        ? Number(this.value).toString()\n        : roundTo(this.value, 2) + this.unit;\n    }\n\n    // It's a multi-unit length.\n\n    const result: MultiLength = {};\n    let units = Object.keys(this.value);\n\n    if (units.length > 1) {\n      // It's a multi-unit length, with multiple units\n      // Attempt to simplify it\n      let pxSum = 0;\n      units.forEach((x) => {\n        const inPx = asPx(this.value[x], x as LengthUnit);\n        if (!isNaN(inPx)) {\n          pxSum += inPx;\n        } else if (x !== 'px') {\n          result[x] = this.value[x];\n        }\n      });\n      if (pxSum !== 0) {\n        result['px'] = pxSum;\n      }\n    } else {\n      result[units[0]] = this.value[units[0]];\n    }\n\n    units = Object.keys(result);\n    if (units.length === 1) {\n      if (units[0] === 'px' && result['px'] === 0) {\n        return '0';\n      }\n      return roundTo(result[units[0]], 2) + units[0];\n    }\n\n    return (\n      'calc(' +\n      units.map((x) => Number(result[x]).toString() + x).join(' + ') +\n      ')'\n    );\n  }\n  type(): ValueType {\n    return 'length';\n  }\n  canonicalScalar(): number {\n    return this.unit === 'multi' ? NaN : asPx(this.value as number, this.unit);\n  }\n}\n\nexport class Time extends Value {\n  value: number;\n  unit: TimeUnit;\n  constructor(from: number, unit: TimeUnit) {\n    super();\n    this.value = from;\n    this.unit = unit;\n  }\n  css(): string {\n    return roundTo(this.value, 2) + this.unit;\n  }\n  type(): ValueType {\n    return 'time';\n  }\n  canonicalScalar(): number {\n    return this.unit === 'ms' ? this.value / 1000 : this.value;\n  }\n}\n\nexport class Frequency extends Value {\n  value: number;\n  unit: FrequencyUnit;\n  constructor(from: number, unit: FrequencyUnit) {\n    super();\n    this.value = from;\n    this.unit = unit;\n  }\n  css(): string {\n    return roundTo(this.value, 2) + this.unit;\n  }\n  type(): ValueType {\n    return 'frequency';\n  }\n  canonicalScalar(): number {\n    return this.unit === 'khz' ? this.value * 1000 : this.value;\n  }\n}\n\nexport class NumberValue extends Value {\n  value: number;\n  constructor(from: number) {\n    super();\n    this.value = from;\n  }\n  css(): string {\n    return Number(this.value).toString();\n  }\n  type(): ValueType {\n    return 'number';\n  }\n  canonicalScalar(): number {\n    return this.value;\n  }\n}\n\nexport class StringValue extends Value {\n  value: string;\n  constructor(from: string) {\n    super();\n    this.value = from;\n  }\n  css(quoteLiteral = ''): string {\n    return quoteLiteral + this.value + quoteLiteral;\n  }\n  type(): ValueType {\n    return 'string';\n  }\n  canonicalScalar(): number {\n    return parseFloat(this.value);\n  }\n  equals(v: Value): boolean {\n    return isString(v) && this.value === v.value;\n  }\n}\n\nexport class ArrayValue extends Value {\n  value: Value[];\n  constructor(from: Value[]) {\n    super();\n    this.value = from.map(makeValueFrom);\n  }\n  get(index: number): Value {\n    return this.value[index];\n  }\n  type(): ValueType {\n    return 'array';\n  }\n  css(): string {\n    return '(' + this.value.map((x) => x.css()).join(', ') + ')';\n  }\n  equals(v: Value): boolean {\n    return (\n      isArray(v) &&\n      this.value.length === v.value.length &&\n      this.value.every((val, idx) => val === v.value[idx])\n    );\n  }\n}\n\nexport function parseColorName(name: string): {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n} {\n  const color = colorName[name.toLowerCase()];\n  if (color) {\n    return {\n      r: color[0],\n      g: color[1],\n      b: color[2],\n      a: 1,\n    };\n  }\n\n  return undefined;\n}\n\nexport function parseHex(hex: string): {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n} {\n  if (!hex) return undefined;\n  if (hex[0] !== '#') return undefined;\n  hex = hex.slice(1);\n  let result;\n  if (hex.length <= 4) {\n    result = {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n    };\n    if (hex.length === 4) {\n      result.a = parseInt(hex[3] + hex[3], 16) / 255;\n    }\n  } else {\n    result = {\n      r: parseInt(hex[0] + hex[1], 16),\n      g: parseInt(hex[2] + hex[3], 16),\n      b: parseInt(hex[4] + hex[5], 16),\n    };\n    if (hex.length === 8) {\n      result.a = parseInt(hex[6] + hex[7], 16) / 255;\n    }\n  }\n  if (result && typeof result.a === 'undefined') result.a = 1.0;\n  return result;\n}\n\nfunction hueToRgbChannel(t1: number, t2: number, hue: number): number {\n  if (hue < 0) hue += 6;\n  if (hue >= 6) hue -= 6;\n\n  if (hue < 1) return (t2 - t1) * hue + t1;\n  else if (hue < 3) return t2;\n  else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;\n  else return t1;\n}\n\nexport function hslToRgb(\n  hue: number,\n  sat: number,\n  light: number\n): { r: number; g: number; b: number } {\n  hue = ((hue + 360) % 360) / 60.0;\n  light = Math.max(0, Math.min(light, 1.0));\n  sat = Math.max(0, Math.min(sat, 1.0));\n  const t2 = light <= 0.5 ? light * (sat + 1) : light + sat - light * sat;\n  const t1 = light * 2 - t2;\n  return {\n    r: Math.round(255 * hueToRgbChannel(t1, t2, hue + 2)),\n    g: Math.round(255 * hueToRgbChannel(t1, t2, hue)),\n    b: Math.round(255 * hueToRgbChannel(t1, t2, hue - 2)),\n  };\n}\n\nexport function rgbToHsl(\n  r: number,\n  g: number,\n  b: number\n): { h: number; s: number; l: number } {\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n\n  const delta = max - min;\n  let h: number;\n  let s: number;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  const l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return { h: h, s: s, l: l };\n}\n\nexport interface ColorInterface {\n  r?: number /* [0..255] */;\n  g?: number /* [0..255] */;\n  b?: number /* [0..255] */;\n  h?: number /* [0..360]deg */;\n  s?: number;\n  l?: number;\n  a?: number /* [0..1] or [0..100]% */;\n  okL?: number /* Luminance: [0..1], 0 = black, 1 = white */;\n  okC?: number /* Chroma: [0..0.4], 0 = neutral gray */;\n  okH?: number /* Hue: [0..360] */;\n}\n\nexport class Color extends Value implements ColorInterface {\n  r?: number; /* [0..255] */\n  g?: number; /* [0..255] */\n  b?: number; /* [0..255] */\n  h?: number; /* [0..360]deg */\n  s?: number;\n  l?: number;\n  okL?: number; /* Luminance: [0..1], 0 = black, 1 = white */\n  okC?: number; /* Chroma: [0..0.4], 0 = neutral gray */\n  okH?: number; /* Hue: [0..360] */\n  a: number; /* [0..1] or [0..100]% */\n  constructor(from: ColorInterface | string) {\n    super();\n    if (typeof from === 'string') {\n      if (from.toLowerCase() === 'transparent') {\n        this.a = 0;\n        [this.r, this.g, this.b] = [0, 0, 0];\n        [this.h, this.s, this.l] = [0, 0, 0];\n        [this.okL, this.okC, this.okH] = [0, 0, 0];\n      } else {\n        const rgb = parseHex(from) || parseColorName(from);\n        if (!rgb) throw new Error();\n        Object.assign(this, rgb);\n        Object.assign(this, rgbToHsl(this.r, this.g, this.b));\n        [this.okL, this.okC, this.okH] = srgbToOklch(this.r, this.g, this.b);\n      }\n    } else {\n      Object.assign(this, from);\n      // Normalize the RGB/HSL values so that a color value\n      // always has r, g, b, h, s, l, okL, okC, okH and a.\n      if (typeof this.r === 'number') {\n        // RGB data\n        Object.assign(this, rgbToHsl(this.r, this.g, this.b));\n        [this.okL, this.okC, this.okH] = srgbToOklch(this.r, this.g, this.b);\n      } else if (typeof this.h === 'number') {\n        // HSL data\n        console.assert(typeof this.h === 'number');\n        this.h = (this.h + 360) % 360;\n        this.s = Math.max(0, Math.min(1.0, this.s));\n        this.l = Math.max(0, Math.min(1.0, this.l));\n        Object.assign(this, hslToRgb(this.h, this.s, this.l));\n        [this.okL, this.okC, this.okH] = srgbToOklch(this.r, this.g, this.b);\n      } else {\n        // okLCH\n        console.assert(typeof this.okL === 'number');\n        console.assert(typeof this.okC === 'number');\n        console.assert(typeof this.okH === 'number');\n        this.okH = (this.okH + 360) % 360;\n        this.okL = Math.max(0, Math.min(1.0, this.okL));\n        this.okC = Math.max(0, Math.min(1, this.okC)); // Chroma is arbitrary, but we fix it at 1. For sRGB, maxvalue is about 0.4\n        [this.r, this.g, this.b] = oklchToRgb(this.okL, this.okC, this.okH);\n        Object.assign(this, rgbToHsl(this.r, this.g, this.b));\n      }\n    }\n    // Default alpha is 1\n    if (typeof this.a !== 'number') this.a = 1.0;\n\n    if (isNaN(this.r) || isNaN(this.g) || isNaN(this.b) || isNaN(this.a)) {\n      debugger;\n    }\n  }\n  type(): ValueType {\n    return 'color';\n  }\n  opaque(): Color {\n    return new Color({ r: this.r, g: this.g, b: this.b });\n  }\n  luma(): number {\n    // Source: https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    let r = this.r / 255.0;\n    let g = this.g / 255.0;\n    let b = this.b / 255.0;\n    r = r <= 0.03928 ? r / 12.92 : Math.pow((r + 0.055) / 1.055, 2.4);\n    g = g <= 0.03928 ? g / 12.92 : Math.pow((g + 0.055) / 1.055, 2.4);\n    b = b <= 0.03928 ? b / 12.92 : Math.pow((b + 0.055) / 1.055, 2.4);\n\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  }\n  hex(): string {\n    let hexString = (\n      (1 << 24) +\n      (clampByte(this.r) << 16) +\n      (clampByte(this.g) << 8) +\n      clampByte(this.b)\n    )\n      .toString(16)\n      .slice(1);\n\n    if (this.a < 1.0) {\n      hexString += ('00' + Math.round(this.a * 255).toString(16)).slice(-2);\n    }\n\n    // Compress hex from hex-6 or hex-8 to hex-3 or hex-4 if possible\n    if (\n      hexString[0] === hexString[1] &&\n      hexString[2] === hexString[3] &&\n      hexString[4] === hexString[5] &&\n      hexString[6] === hexString[7]\n    ) {\n      hexString =\n        hexString[0] +\n        hexString[2] +\n        hexString[4] +\n        (this.a < 1.0 ? hexString[6] : '');\n    }\n\n    return '#' + hexString;\n  }\n  rgb(): string {\n    return `rgb(${roundTo(this.r, 2)}, ${roundTo(this.g, 2)}, ${roundTo(\n      this.b,\n      2\n    )}${this.a < 1.0 ? ', ' + roundTo(100 * this.a, 2) + '%' : ''})`;\n  }\n  hsl(): string {\n    return `hsl(${this.h}deg, ${this.s}%, ${this.l}%, ${\n      this.a < 1.0 ? ', ' + roundTo(100 * this.a, 2) + '%' : ''\n    })`;\n  }\n  oklch(): string {\n    return `oklch(${this.okL}, ${this.okC}, ${this.okH}, ${this.a})`;\n  }\n  css(): string {\n    if (isNaN(this.r) || isNaN(this.g) || isNaN(this.b) || isNaN(this.a)) {\n      debugger;\n    }\n    if (this.r === 0 && this.g === 0 && this.b === 0 && this.a === 0)\n      return 'transparent';\n    if (this.a < 1) return this.rgb();\n\n    return this.hex();\n  }\n  canonicalScalar(): number {\n    return this.luma();\n  }\n  equals(v: Value): boolean {\n    return (\n      isColor(v) &&\n      this.r === v.r &&\n      this.g === v.g &&\n      this.b === v.b &&\n      this.a === v.a\n    );\n  }\n}\n\nexport function makeValueFrom(from: {\n  type: () => ValueType;\n  [key: string]: unknown;\n}): Value {\n  switch (from.type()) {\n    case 'color':\n      return new Color(from as ColorInterface);\n    case 'frequency':\n      return new Frequency(from.value as number, from.unit as FrequencyUnit);\n    case 'time':\n      return new Time(from.value as number, from.unit as TimeUnit);\n    case 'angle':\n      return new Angle(from.value as number, from.unit as AngleUnit);\n    case 'string':\n      return new StringValue(from.value as string);\n    case 'length':\n      return new Length(from.value, from.unit as LengthUnit);\n    case 'percentage':\n      return new Percentage(from.value as number);\n    case 'number':\n      return new NumberValue(from.value as number);\n    case 'array':\n      return new ArrayValue((from.value as unknown[]).map(makeValueFrom));\n    default:\n      console.error('Unknown value type');\n  }\n  return undefined;\n}\nexport function isColor(arg: Value): arg is Color {\n  return arg instanceof Color;\n}\n\n/**\n * Convert a value to a color object.\n *\n * @param {object|string} value - hex string, color name or object with partial\n *\n */\n\nexport function asColor(value: Record<string, unknown> | string): Color {\n  if (!value) return undefined;\n  if (value instanceof Color) return value;\n  let result: Color;\n  try {\n    result = new Color(value);\n  } catch (_err) {\n    result = undefined;\n  }\n  return result;\n}\n\nexport function isColorArray(arg: Value): arg is ArrayValue {\n  return arg instanceof ArrayValue && arg.value.every((x) => isColor(x));\n}\n\nexport function isNumber(arg: Value): arg is NumberValue {\n  return arg instanceof NumberValue;\n}\n\nexport function assertNumber(arg: Value): asserts arg is NumberValue {\n  console.assert(arg instanceof NumberValue);\n}\n\nfunction assertNumberOrPercentage(arg: Value): asserts arg is NumberValue {\n  console.assert(arg instanceof NumberValue || arg instanceof Percentage);\n}\n\nexport function assertLength(arg: Value): asserts arg is Length {\n  console.assert(arg instanceof Length);\n}\n\nexport function isPercentage(arg: Value): arg is Percentage {\n  return arg instanceof Percentage;\n}\n\nexport function isLength(arg: Value): arg is Length {\n  return arg instanceof Length;\n}\n\nexport function isString(arg: Value): arg is StringValue {\n  return arg instanceof StringValue;\n}\n\nexport function isAngle(arg: Value): arg is Angle {\n  return arg instanceof Angle;\n}\n\nexport function isTime(arg: Value): arg is Time {\n  return arg instanceof Time;\n}\n\nexport function isFrequency(arg: Value): arg is Frequency {\n  return arg instanceof Frequency;\n}\n\nexport function isArray(arg: Value): arg is ArrayValue {\n  return arg instanceof ArrayValue;\n}\n\nexport function isZero(arg: Value): arg is NumberValue {\n  return arg instanceof NumberValue && arg.value === 0;\n}\n\nexport function asInteger(value: Value, defaultValue?: number): number {\n  if (isNumber(value)) {\n    return Math.round(value.value);\n  }\n  if (typeof defaultValue === 'undefined') assertNumber(value);\n  return defaultValue;\n}\n\nexport function asDecimalRatio(\n  value: Value,\n  defaultValue?: number | null\n): number {\n  if (isPercentage(value)) {\n    return value.value / 100;\n  } else if (isNumber(value)) {\n    return value.value;\n  }\n\n  if (typeof defaultValue === 'undefined') assertNumberOrPercentage(value);\n  return defaultValue;\n}\n\nexport function asDegree(value: Value): number {\n  // https://drafts.csswg.org/css-values-3/#angle-value\n\n  if (isAngle(value)) {\n    if (value.unit === 'deg') {\n      return value.value;\n    } else if (value.unit === 'rad') {\n      return (value.value * 180) / Math.PI;\n    } else if (value.unit === 'grad') {\n      return (value.value * 180) / 200;\n    } else if (value.unit === 'turn') {\n      return value.value * 360.0;\n    }\n    throwError(ErrorCode.UnknownUnit, value.unit);\n  } else {\n    assertNumber(value);\n    // Degree is the canonical unit for angles\n    return value.value;\n  }\n}\n\nfunction asPx(\n  value: number | MultiLength,\n  unit: LengthUnit,\n  baseUnits?: BaseLengthUnits\n): number {\n  // See https://drafts.csswg.org/css-values-3/#lengths\n  if (typeof value !== 'number') {\n    console.assert(unit === 'multi');\n    let pxSum = value['px'] ?? 0;\n    Object.keys(value).forEach((x) => {\n      const inPx = asPx(this.value[x], x as LengthUnit, baseUnits);\n      if (isNaN(inPx)) return NaN;\n      pxSum += pxSum;\n    });\n    return pxSum;\n  }\n  if (unit === 'px') {\n    return value;\n  } else if (unit === 'cm') {\n    return (value * 96.0) / 2.54;\n  } else if (unit === 'mm') {\n    return (value * 96.0) / 25.4;\n  } else if (unit === 'Q') {\n    return (value * 96.0) / 2.54 / 40.0;\n  } else if (unit === 'in') {\n    return value * 96.0;\n  } else if (unit === 'pc') {\n    return value * 16.0;\n  } else if (unit === 'pt') {\n    return (value * 96.0) / 72.0;\n  }\n  let base: number;\n  if (unit === 'vmin') {\n    base = Math.min(baseUnits?.vh ?? NaN, baseUnits?.vw ?? NaN);\n  } else if (unit === 'vmax') {\n    base = Math.max(baseUnits?.vh ?? NaN, baseUnits?.vw ?? NaN);\n  } else {\n    base = baseUnits?.[unit] ?? NaN;\n  }\n\n  return base * value;\n}\n\nexport function asPercent(value: Value): number {\n  if (isPercentage(value)) {\n    return value.value / 100;\n  }\n  assertNumber(value);\n  return value.value;\n}\n\nexport function asString(value: Value, defaultValue: string): string {\n  if (!isString(value)) {\n    return defaultValue;\n  }\n  return value.value;\n}\n\nexport function compareValue(a: Value, b: Value): number {\n  // @todo: compare strings (asCanonicalString())\n  return b.canonicalScalar() - a.canonicalScalar();\n}\n\nexport function promoteToMulti(value: Length | NumberValue): Length {\n  if (isNumber(value)) {\n    return new Length({ px: value.value }, 'multi');\n  }\n  if (value.unit === 'multi') return value;\n\n  const newValue: MultiLength = {};\n  newValue[value.unit] = value.value;\n\n  return new Length(newValue, 'multi');\n}\n\nexport function scaleLength(arg1: Length, arg2?: Value): ArrayValue {\n  if (arg1.unit === 'multi') {\n    throw new SyntaxError(ErrorCode.InvalidOperand);\n  }\n  const scaleName = asString(arg2, 'pentatonic').toLowerCase();\n  let scale = {\n    'tritonic': [2, 3],\n    'tetratonic': [2, 4],\n    'pentatonic': [2, 5],\n    'golden': [1.618, 1],\n    'golden ditonic': [1.618, 2],\n  }[scaleName];\n  if (typeof scale === 'undefined') {\n    // Try to parse the scale as \"p:q\"\n    scale = scaleName.split(':').map((x) => parseFloat(x));\n    if (isNaN(scale[0]) || isNaN(scale[1])) {\n      throw new SyntaxError(ErrorCode.InvalidOperand);\n    }\n    scale = [scale[1] / scale[0], 1];\n  }\n  const [r, n] = scale;\n  const range =\n    (arg1.value as number) * (Math.pow(r, 7 / n) - Math.pow(r, -2 / n));\n  const precision =\n    range < 10 || (arg1.value as number) * Math.pow(r, -2 / n) < 1 ? 2 : 0;\n  const result: Value[] = [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7].map(\n    (i: number): Value =>\n      new Length(\n        roundTo((arg1.value as number) * Math.pow(r, i / n), precision),\n        arg1.unit\n      )\n  );\n\n  return new ArrayValue(result);\n}\n","const chalk = require('chalk');\nconst ciInfo = require('ci-info');\n\n//\n// Terminal colors for various kind of messages\n//\nconst tcOrange = '#ffcc00';\nconst tcRed = '#fa2040';\nconst tcBlue = '#6ab3ff';\nconst tcPurple = '#d1d7ff';\n\n/** Do not use fancy color output if the output stream is not a terminal\n * (e.g. if we're redirecting errors to a log file) or when in a CI environment.\n * Note that the debug console in VSCode returns 'undefined' for isTTY.\n */\nlet gUseColor = (process.stdout.isTTY ?? false) && !ciInfo.isCI;\n\nexport const terminal = {\n  useColor: (flag: boolean): void => {\n    gUseColor = flag;\n  },\n  autoFormat: (m: string): string => {\n    return m\n      .replace(/(\"(.*)\")/g, (x) => {\n        return terminal.string(x.slice(1, -1));\n      })\n      .replace(/(`(.*)`)/g, (x) => {\n        return terminal.keyword(x);\n      });\n  },\n  success: (m = ''): string => {\n    chalk.green('✔︎   ' + m);\n    return gUseColor ? chalk.bold.green('✔︎   ' + m) : '✔︎   ' + m;\n  },\n  error: (m = ''): string => {\n    return gUseColor ? chalk.hex(tcRed)(chalk.bold('✘   ' + m)) : '✘   ' + m;\n  },\n  warning: (m = ''): string => {\n    return gUseColor\n      ? chalk.hex(tcOrange)(chalk.bold('⚠️   ' + m))\n      : '⚠   ' + m;\n  },\n  path: (m = ''): string => {\n    return gUseColor ? chalk.hex(tcBlue).italic(m) : m;\n  },\n  keyword: (m = ''): string => {\n    return gUseColor ? chalk.hex(tcOrange)(m) : m;\n  },\n  string: (m = ''): string => {\n    return gUseColor\n      ? chalk.hex(tcOrange)('\"' + chalk.italic(m) + '\"')\n      : '\"' + m + '\"';\n  },\n  dim: (m = ''): string => {\n    return gUseColor ? chalk.hex('#999')(m) : m;\n  },\n  time: (t = new Date()): string => {\n    return gUseColor\n      ? chalk.hex(tcPurple)(`[${t.toLocaleTimeString()}]`)\n      : '[' + t + ']';\n  },\n  link: (m: string): string => {\n    return gUseColor\n      ? '\\n▷   ' +\n          chalk.hex(tcPurple)(\n            'https://github.com/arnog/chromatic/docs/errors/' + m + '.md'\n          )\n      : '\\n▷   https://github.com/arnog/chromatic/docs/errors/' + m + '.md';\n  },\n};\n","const chroma = require('chroma-js');\nimport {\n  NumberValue,\n  Color,\n  StringValue,\n  Value,\n  clampByte,\n  ArrayValue,\n  isAngle,\n  isNumber,\n  isPercentage,\n  assertNumber,\n  asDecimalRatio,\n  asColor,\n  asDegree,\n  asInteger,\n  asPercent,\n  asString,\n  hslToRgb,\n  isColor,\n} from './value';\nimport { getSuggestion } from './utils';\nimport { throwError, ErrorCode } from './errors';\n\nfunction clampUnit(x: number): number {\n  return x < 0 ? 0 : x > 1 ? 1 : x;\n}\n\n// Interpolate hue in degrees along the shortest arc\nfunction mixHueShortest(h1: number, h2: number, w: number): number {\n  // Normalize inputs to [0, 360)\n  h1 = ((h1 % 360) + 360) % 360;\n  h2 = ((h2 % 360) + 360) % 360;\n\n  // Minimal signed difference in (-180, 180]\n  const diff = ((((h2 - h1 + 180) % 360) + 360) % 360) - 180;\n\n  // Interpolate and normalize\n  const h = h1 + w * diff;\n  return ((h % 360) + 360) % 360;\n}\n\n// Lightweight Abney & Bezold–Brücke hue correction in OKLCh space\n// kA, kB are small angles in degrees controlling the strength of each term\nfunction abneyBezoldCorrectApprox(\n  L: number,\n  C: number,\n  Hdeg: number,\n  kA: number = 6,\n  kB: number = 8\n): number {\n  const TAU = Math.PI * 2;\n  const h = (((Hdeg % 360) + 360) % 360) / 360; // 0..1\n  // Approximate relative saturation. For sRGB, in-gamut C rarely exceeds ~0.4\n  const Srel = Math.max(0, Math.min(1, C / 0.4));\n  // Abney-like term grows as purity decreases; Bezold–Brücke bends with lightness\n  const dH =\n    kA * (1 - Srel) * Math.sin(TAU * 2 * h) +\n    kB * (L - 0.5) * Math.sin(TAU * 4 * h);\n  const Hcorr = (((Hdeg + dH) % 360) + 360) % 360;\n  return Hcorr;\n}\n\nfunction asDecimalByte(value: Value): number {\n  if (isPercentage(value)) {\n    return Math.round((255 * value.value) / 100);\n  }\n  assertNumber(value);\n  return Math.round(value.value);\n}\n\n/**\n * L: 0..100\n * a: -128..128\n * b: -128..128\n */\n\nfunction labToRgb(\n  L: number,\n  aStar: number,\n  bStar: number\n): { r: number; g: number; b: number } {\n  L = Math.max(0, Math.min(100, L));\n  aStar = Math.max(-128, Math.min(128, aStar));\n  bStar = Math.max(-128, Math.min(128, bStar));\n  let y = (L + 16) / 116;\n  let x = aStar / 500 + y;\n  let z = y - bStar / 200;\n\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787);\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787);\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787);\n\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b;\n\n  return {\n    r: clampByte(r * 255),\n    g: clampByte(g * 255),\n    b: clampByte(b * 255),\n  };\n}\n\n/**\n * r: 0..255\n * g: 0..255\n * b: 0..255\n * L: 0..100\n * a: -128..128\n * b: -128..128\n */\nfunction rgbToLab(\n  r: number,\n  g: number,\n  b: number\n): { L: number; a: number; b: number } {\n  r = clampByte(r) / 255;\n  g = clampByte(g) / 255;\n  b = clampByte(b) / 255;\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  let x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n  let y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0;\n  let z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n  return { L: 116 * y - 16, a: 500 * (x - y), b: 200 * (y - z) };\n}\n\nfunction rgbToXyz(\n  r: number,\n  g: number,\n  b: number\n): { x: number; y: number; z: number } {\n  return {\n    x: 0.430574 * r + 0.34155 * g + 0.178325 * b,\n    y: 0.222015 * r + 0.706655 * g + 0.07133 * b,\n    z: 0.020183 * r + 0.129553 * g + 0.93918 * b,\n  };\n}\n\nfunction xyzToRgb(\n  x: number,\n  y: number,\n  z: number\n): { r: number; g: number; b: number } {\n  return {\n    r: 3.063218 * x - 1.393325 * y - 0.475802 * z,\n    g: -0.969243 * x + 1.875966 * y + 0.041555 * z,\n    b: 0.067871 * x - 0.228834 * y + 1.069251 * z,\n  };\n}\n\nconst colorDeficiencyTable = {\n  protanopia: { cpu: 0.735, cpv: 0.265, am: 1.273463, ayi: -0.073894 },\n  deuteranopia: { cpu: 1.14, cpv: -0.14, am: 0.968437, ayi: 0.003331 },\n  tritanopia: { cpu: 0.171, cpv: -0.003, am: 0.062921, ayi: 0.292119 },\n};\n\nfunction hwbToRgb(\n  hue: number,\n  white: number,\n  black: number\n): { r: number; g: number; b: number } {\n  const rgb = hslToRgb(hue, 1, 0.5);\n  const xs = [];\n  xs[0] = rgb.r / 255;\n  xs[1] = rgb.g / 255;\n  xs[2] = rgb.b / 255;\n  const total = white + black;\n  if (total > 1) {\n    white = Number((white / total).toFixed(2));\n    black = Number((black / total).toFixed(2));\n  }\n  for (let i = 0; i < 3; i++) {\n    xs[i] *= 1 - white - black;\n    xs[i] += white;\n    xs[i] = Number(xs[i] * 255);\n  }\n  return { r: xs[0], g: xs[1], b: xs[2] };\n}\n\nconst whiteColor = new Color('#fff');\nconst blackColor = new Color('#000');\n\nfunction mixColor(c1: Color, c2: Color, weight: number, model?: string): Color {\n  // @todo: support additional color models. See color-convert npm module.\n  const modelName = (model ?? 'oklch').toLowerCase();\n  const color1 = c1;\n  const color2 = c2;\n  const w = weight;\n\n  let alpha = typeof color2.a === 'number' ? color2.a : 1.0;\n  alpha = alpha + ((typeof color1.a === 'number' ? color2.a : 1.0) - alpha) * w;\n\n  if (modelName === 'rgb') {\n    return new Color({\n      r: color1.r + (color2.r - color1.r) * w,\n      g: color1.g + (color2.g - color1.g) * w,\n      b: color1.b + (color2.b - color1.b) * w,\n      a: alpha,\n    });\n  }\n\n  if (modelName === 'hsl') {\n    return new Color({\n      h: mixHueShortest(color1.h, color2.h, w),\n      s: color1.s + (color2.s - color1.s) * w,\n      l: color1.l + (color2.l - color1.l) * w,\n      a: alpha,\n    });\n  }\n\n  if (modelName === 'oklch' || modelName === 'okhsl') {\n    return new Color({\n      okL: color1.okL + (color2.okL - color1.okL) * w,\n      okC: color1.okC + (color2.okC - color1.okC) * w,\n      okH: mixHueShortest(color1.okH, color2.okH, w),\n      a: alpha,\n    });\n  }\n  console.log('Unknown color model:', modelName);\n}\n\nfunction getHPrimeFn(x, y): number {\n  if (x === 0 && y === 0) return 0;\n  const hueAngle = (Math.atan2(x, y) * 180) / Math.PI;\n  return hueAngle >= 0 ? hueAngle : hueAngle + 360;\n}\n\n/**\n * Measure the distance between two colors.\n * Colors that have a deltaE of less than 2 are difficult to distinguish.\n *\n *  Uses the CIE-2000 algorithm which correct for perceptual uniformity.\n *  http://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n *  http://www2.ece.rochester.edu/~gsharma/ciede2000/ciede2000noteCRNA.pdf\n */\n\nexport function getDeltaE(c1: Color, c2: Color): number {\n  const kSubL = 1;\n  const kSubC = 1;\n  const kSubH = 1;\n\n  const x1 = rgbToLab(c1.r, c1.g, c1.b);\n  const x2 = rgbToLab(c2.r, c2.g, c2.b);\n\n  const deltaLPrime = x2.L - x1.L;\n  const LBar = (x1.L + x2.L) / 2;\n\n  const C1 = Math.sqrt(x1.a * x1.a + x1.b * x1.b);\n  const C2 = Math.sqrt(x2.a * x2.a + x2.b * x2.b);\n  const CBar = (C1 + C2) / 2;\n\n  const aPrime =\n    1 - Math.sqrt(Math.pow(CBar, 7) / (Math.pow(CBar, 7) + Math.pow(25, 7)));\n  const aPrime1 = x1.a + (x1.a / 2) * aPrime;\n  const aPrime2 = x2.a + (x2.a / 2) * aPrime;\n\n  const CPrime1 = Math.sqrt(aPrime1 * aPrime1 + x1.b * x1.b);\n  const CPrime2 = Math.sqrt(aPrime2 * aPrime2 + x2.b * x2.b);\n  const CBarPrime = (CPrime1 + CPrime2) / 2;\n  const deltaCPrime = CPrime2 - CPrime1;\n  const LBarPrime = Math.pow(LBar - 50, 2);\n  const S_L = 1 + (0.015 * LBarPrime) / Math.sqrt(20 + LBarPrime);\n  const S_C = 1 + 0.045 * CBarPrime;\n\n  const hPrime1 = getHPrimeFn(x1.b, aPrime1);\n  const hPrime2 = getHPrimeFn(x2.b, aPrime2);\n\n  const deltahPrime =\n    C1 === 0 || C2 === 0\n      ? 0\n      : Math.abs(hPrime1 - hPrime2) <= 180\n      ? hPrime2 - hPrime1\n      : hPrime2 <= hPrime1\n      ? hPrime2 - hPrime1 + 360\n      : hPrime2 - hPrime1 - 360;\n  const deltaHPrime =\n    2 *\n    Math.sqrt(CPrime1 * CPrime2) *\n    Math.sin((deltahPrime * Math.PI) / 180 / 2);\n  const HBarPrime =\n    Math.abs(hPrime1 - hPrime2) > 180\n      ? (hPrime1 + hPrime2 + 360) / 2\n      : (hPrime1 + hPrime2) / 2;\n  const T =\n    1 -\n    0.17 * Math.cos((Math.PI / 180) * (HBarPrime - 30)) +\n    0.24 * Math.cos((Math.PI / 180) * (2 * HBarPrime)) +\n    0.32 * Math.cos((Math.PI / 180) * (3 * HBarPrime + 6)) -\n    0.2 * Math.cos((Math.PI / 180) * (4 * HBarPrime - 63));\n  const S_H = 1 + 0.015 * CBarPrime * T;\n  const R_T =\n    -2 *\n    Math.sqrt(\n      Math.pow(CBarPrime, 7) / (Math.pow(CBarPrime, 7) + Math.pow(25, 7))\n    ) *\n    Math.sin(\n      (Math.PI / 180) * (60 * Math.exp(-Math.pow((HBarPrime - 275) / 25, 2)))\n    );\n  const lightness = deltaLPrime / (kSubL * S_L);\n  const chroma = deltaCPrime / (kSubC * S_C);\n  const hue = deltaHPrime / (kSubH * S_H);\n\n  return Math.sqrt(\n    lightness * lightness + chroma * chroma + hue * hue + R_T * chroma * hue\n  );\n}\n\nexport function filterColor(c: Color, filter: string): Color {\n  // https://ixora.io/projects/colorblindness/color-blindness-simulation-research/\n  // https://github.com/hx2A/ColorBlindness/blob/master/src/colorblind/ColorUtilities.java\n  switch (filter) {\n    case 'none':\n      return c;\n\n    case 'grayscale':\n      const lab = rgbToLab(c.r, c.g, c.b);\n      return new Color({\n        a: c.a,\n        ...labToRgb(lab.L, 0, 0),\n      });\n\n    case 'protanopia':\n    case 'deuteranopia':\n    case 'tritanopia': {\n      const gamma = 2.2;\n      // (x, y, z) in [0..1]^3\n      const { x, y, z } = rgbToXyz(\n        Math.pow(c.r / 255, gamma),\n        Math.pow(c.g / 255, gamma),\n        Math.pow(c.b / 255, gamma)\n      );\n      const u = x + y + z != 0 ? x / (x + y + z) : 0;\n      const v = x + y + z != 0 ? y / (x + y + z) : 0;\n      const nx = (y * 0.312713) / 0.329016;\n      const nz = (y * 0.358271) / 0.329016;\n\n      let clm: number;\n      if (u < colorDeficiencyTable[filter].cpu) {\n        clm =\n          (colorDeficiencyTable[filter].cpv - v) /\n          (colorDeficiencyTable[filter].cpu - u);\n      } else {\n        clm =\n          (v - colorDeficiencyTable[filter].cpv) /\n          (u - colorDeficiencyTable[filter].cpu);\n      }\n      const clyi = v - u * clm;\n      const dU =\n        (colorDeficiencyTable[filter].ayi - clyi) /\n        (clm - colorDeficiencyTable[filter].am);\n      const dV = clm * dU + clyi;\n\n      const xPrime = (dU * y) / dV;\n      const zPrime = ((1 - (dU + dV)) * y) / dV;\n\n      const dX = nx - xPrime;\n      const dZ = nz - zPrime;\n      const { r: dr, g: dg, b: db } = xyzToRgb(dX, 0, dZ);\n      let { r: rPrime, g: gPrime, b: bPrime } = xyzToRgb(xPrime, y, zPrime);\n      const deltaR = rPrime ? ((rPrime < 0 ? 0 : 1) - rPrime) / dr : 0;\n      const deltaG = gPrime ? ((gPrime < 0 ? 0 : 1) - gPrime) / dg : 0;\n      const deltaB = bPrime ? ((bPrime < 0 ? 0 : 1) - bPrime) / db : 0;\n\n      const adjustment = Math.max(\n        deltaR > 1 || deltaR < 0 ? 0 : deltaR,\n        deltaG > 1 || deltaG < 0 ? 0 : deltaG,\n        deltaB > 1 || deltaB < 0 ? 0 : deltaB\n      );\n      rPrime += adjustment * dr;\n      gPrime += adjustment * dg;\n      bPrime += adjustment * db;\n      return new Color({\n        r: 255 * Math.pow(clampUnit(rPrime), 1 / gamma),\n        g: 255 * Math.pow(clampUnit(gPrime), 1 / gamma),\n        b: 255 * Math.pow(clampUnit(bPrime), 1 / gamma),\n      });\n    }\n  }\n  return undefined;\n}\n\nexport function getSimilarColors(\n  target: Color,\n  colors: { name: string; color: Color }[],\n  filter?: string\n): { name: string; color: Color; deltaE: number }[] {\n  const result = [];\n\n  const filteredTarget = filterColor(target, filter);\n\n  colors.forEach((x) => {\n    if (!target.equals(x.color)) {\n      // Use an increased threshold (6) when applying a filter.\n      // Seems to produce more accurate results for\n      // confusing colors for color deficient people.\n      const diff = filter\n        ? getDeltaE(filteredTarget, filterColor(x.color, filter)) / 3\n        : getDeltaE(target, x.color);\n      if (diff < 2) {\n        result.push({\n          name: x.name,\n          color: x.color,\n          deltaE: diff,\n        });\n      }\n    }\n  });\n  return result.length === 0\n    ? null\n    : result.sort((a, b) => a.deltaE - b.deltaE);\n}\n\n// export function scaleColor(\n//   arg1: Color,\n//   arg2?: Value,\n//   arg3?: Value,\n//   arg4?: Value\n// ): ArrayValue {\n//   // For an analysis of various ramps, see https://uxplanet.org/designing-systematic-colors-b5d2605b15c\n//   let c1 = new Color('#fff');\n//   let c2: Color;\n//   let c3 = new Color('#000');\n//   let n = 10;\n//   if (arg3?.type() === 'color') {\n//     // If a single color is provided, we'll calculate a color ramp\n//     // with the provided color as the midpoint, and black and white\n//     // as the extremes.\n//     c1 = asColor(arg1);\n//     c2 = asColor(arg2);\n//     c3 = asColor(arg3);\n//     n = asInteger(arg4, 10);\n//   } else if (arg2?.type() === 'color') {\n//     c1 = asColor(arg1);\n//     c2 = asColor(arg2);\n//     c3 = asColor(arg2);\n//     n = asInteger(arg3, 10);\n//   } else if (arg1.type() === 'color') {\n//     c2 = asColor(arg1);\n//     c3 = new Color({\n//       // Correct the hue for the Abney Effect\n//       // See https://royalsocietypublishing.org/doi/pdf/10.1098/rspa.1909.0085\n//       // (the human vision system perceives a hue shift as colors\n//       // change in colorimetric purity (mix with black or mix\n//       // with white))\n//       // and the Bezold-Brücke effect (hue shift as intensity increases)\n//       // See https://www.sciencedirect.com/science/article/pii/S0042698999000851\n\n//       // h: c2.h >= 60 && c2.h <= 240 ? c2.h + 30 : c2.h - 30,\n//       h: c2.h - 20 * Math.sin(4 * Math.PI * (c2.h / 360)),\n//       s: c2.s + 0.2 * Math.sin(2 * Math.PI * (c2.h / 360)),\n//       l:\n//         c2.h >= 180\n//           ? c2.l - 0.35\n//           : c2.l - 0.2 + 0.1 * Math.sin(4 * Math.PI * (c2.h / 360)),\n//     });\n//     n = asInteger(arg2, 10);\n//     const mode = new StringValue('rgb');\n//     return new ArrayValue([\n//       mixColor(c1, c2, new NumberValue(0.12), mode),\n//       mixColor(c1, c2, new NumberValue(0.3), mode),\n//       mixColor(c1, c2, new NumberValue(0.5), mode),\n//       mixColor(c1, c2, new NumberValue(0.7), mode),\n//       mixColor(c1, c2, new NumberValue(0.85), mode),\n//       c2,\n//       mixColor(c3, c2, new NumberValue(0.85), mode),\n//       mixColor(c3, c2, new NumberValue(0.7), mode),\n//       mixColor(c3, c2, new NumberValue(0.5), mode),\n//       mixColor(c3, c2, new NumberValue(0.2), mode),\n//       // FUNCTIONS.darken(c2, new NumberValue(0.06), mode),\n//       // FUNCTIONS.darken(c2, new NumberValue(0.12), mode),\n//       // FUNCTIONS.darken(c2, new NumberValue(0.18), mode),\n//       // FUNCTIONS.darken(c2, new NumberValue(0.24), mode),\n//     ]);\n//   }\n\n//   if (!c1 || !c2 || !c3) return undefined;\n\n//   // If there are three colors provided, we calculate a scale\n//   // in Lab mode, corrected for lightness (so that there is as many\n//   // light and dark colors). As a result, the mid-point may be a\n//   // color than c2.\n//   // This kind of scale is most appropriate for data visualization.\n//   const colors = chroma\n//     .scale(\n//       // chroma.bezier([\n//       //     c1.opaque().hex(),\n//       //     c2.opaque().hex(),\n//       //     c3.opaque().hex(),\n//       // ])\n//       [c1.opaque().hex(), c2.opaque().hex(), c3.opaque().hex()]\n//     )\n//     .mode('lab')\n//     .correctLightness()\n//     .colors(n + 1);\n\n//   return new ArrayValue(colors.map((x) => new Color(x)));\n// }\n\n// For an analysis of various ramps, see https://uxplanet.org/designing-systematic-colors-b5d2605b15c\n// OKHSL-based color scale generation for more perceptually uniform results\n\nexport function scaleColor(\n  arg1: Color,\n  arg2?: Value,\n  arg3?: Value,\n  arg4?: Value\n): ArrayValue {\n  if (!arg2 && !arg3 && !arg4) {\n    // If a single color is provided, we'll calculate a color ramp\n    // with the provided color as the midpoint, white as the low\n    // and a computed dark as the high\n\n    const c2 = asColor(arg1);\n\n    // Create c3 using OKHSL calculations for better perceptual uniformity\n    let adjustedH = c2.okH; // - 20 * Math.sin(4 * Math.PI * (c2.okH / 360));\n    adjustedH = (adjustedH + 360) % 360;\n    const adjustedC = c2.okC;\n    //  Math.min(\n    //   1,\n    //   c2.okC + 0.2 * Math.sin(2 * Math.PI * ((c2.okH + 90) / 360))\n    // );\n    const adjustedL = Math.max(0.2, c2.okL - 4 * Math.min(0.2, 1 - c2.okL));\n\n    const c1 = new Color({ okL: 0.9999, okC: c2.okC / 4, okH: c2.okH });\n    let c3 = new Color({ okL: adjustedL, okC: adjustedC, okH: c2.okH });\n\n    const raw = [\n      mixColor(c1, c2, 0.12),\n      mixColor(c1, c2, 0.3),\n      mixColor(c1, c2, 0.5),\n      mixColor(c1, c2, 0.7),\n      mixColor(c1, c2, 0.85),\n      c2,\n      mixColor(c3, c2, 0.85),\n      mixColor(c3, c2, 0.7),\n      mixColor(c3, c2, 0.5),\n      mixColor(c3, c2, 0.3),\n    ];\n\n    // Apply small OKLCh hue correction per step (kept subtle)\n    const corrected = raw.map((col) => {\n      const okL = col.okL;\n      const okC = col.okC;\n      const okH = col.okH;\n      const Hcorr = okH; // abneyBezoldCorrectApprox(okL, okC, okH);\n      return new Color({ okL, okC, okH: Hcorr, a: col.a });\n    });\n\n    return new ArrayValue(corrected);\n  }\n\n  let c1 = new Color('#fff');\n  let c2: Color;\n  let c3 = new Color('#000');\n  let n = 10;\n  if (arg3?.type() === 'color') {\n    // 3 colors have been provided: use them as the lo, mid and hi colors.\n    c1 = asColor(arg1);\n    c2 = asColor(arg2);\n    c3 = asColor(arg3);\n    n = asInteger(arg4, 10);\n  } else if (arg2?.type() === 'color') {\n    // 2 colors have been provided. Use the first one as the lo, the two others\n    // as mid and high.\n    c1 = asColor(arg1);\n    c2 = asColor(arg2);\n    c3 = asColor(arg2);\n    n = asInteger(arg3, 10);\n  }\n\n  if (!c1 || !c2 || !c3) return undefined;\n\n  // Use chroma-js OKLCh mode for 3-color scales\n  const colors = chroma\n    .scale([c1.opaque().hex(), c2.opaque().hex(), c3.opaque().hex()])\n    .mode('oklch')\n    .colors(n);\n\n  return new ArrayValue(colors.map((x) => new Color(x)));\n}\n\n/* Functions that take a \"color\" argument list */\n/* Which includes either space or comma as a separator, and \"/\" for alpha */\nexport const COLOR_ARGUMENTS_FUNCTIONS = [\n  'rgb',\n  'rgba',\n  'hsl',\n  'hsla',\n  'hwb',\n  'gray',\n  'lab',\n  'oklch',\n];\n\nexport const COLOR_FUNCTION_ARGUMENTS = {\n  rgb: 'number|percentage, number|percentage, number|percentage,number|percentage|none',\n  rgba: 'number|percentage, number|percentage, number|percentage,number|percentage|none',\n  hsl: 'number|angle, number|percentage, number|percentage, number|percentage|none',\n  hsla: 'number|angle, number|percentage, number|percentage, number|percentage|none',\n  hsv: 'number|angle, number|percentage, number|percentage, number|percentage|none',\n  hwb: 'number|angle, number|percentage, number|percentage, number|percentage|none',\n  lab: 'number|percentage, number, number, number|percentage|none',\n  oklch: 'number|percentage, number|percentage, number|angle',\n  gray: 'number|percentage, number|percentage|none',\n  mix: 'color, color, number|percentage|none, string|none',\n  saturate: 'color, number|percentage|none',\n  desaturate: 'color, number|percentage|none',\n  lighten: 'color, number|percentage|none',\n  darken: 'color, number|percentage|none',\n  rotateHue: 'color, angle|number|none',\n  complement: 'color',\n  contrast: 'color, color|none, color|none',\n  filter: 'color, string',\n\n  tint: 'color, number|percentage|none',\n  shade: 'color, number|percentage|none',\n};\n\nexport const COLOR_FUNCTIONS = {\n  /** r, g, b: a value as a number in [0...255] or as a percentage. a: a number in [0...1] or a percentage */\n  rgb: (r: Value, g: Value, b: Value, a?: Value): Color =>\n    new Color({\n      r: asDecimalByte(r),\n      g: asDecimalByte(g),\n      b: asDecimalByte(b),\n      a: asDecimalRatio(a, 1.0),\n    }),\n  hsl: (h: Value, s: Value, l: Value, a?: Value): Color =>\n    new Color({\n      h: asDegree(h),\n      s: asPercent(s),\n      l: asPercent(l),\n      a: asDecimalRatio(a, 1.0),\n    }),\n  hsv: (h: Value, sat: Value, val: Value, a?: Value): Color => {\n    let s = asPercent(sat);\n    const v = asPercent(val);\n\n    const l = ((2 - s) * v) / 2;\n\n    if (l != 0) {\n      if (l == 1) {\n        s = 0;\n      } else if (l < 0.5) {\n        s = (s * v) / (l * 2);\n      } else {\n        s = (s * v) / (2 - l * 2);\n      }\n    }\n    return new Color({\n      h: asDegree(h),\n      s: s,\n      l: l,\n      a: asDecimalRatio(a, 1.0),\n    });\n  },\n  hwb: (h: Value, w: Value, b: Value, a?: Value): Color => {\n    return new Color({\n      a: asDecimalRatio(a, 1.0),\n      ...hwbToRgb(asDegree(h), asPercent(w), asPercent(b)),\n    });\n  },\n  lab: (l: Value, a: Value, b: Value, alpha?: Value): Color => {\n    return new Color({\n      a: asDecimalRatio(alpha, 1.0),\n      ...labToRgb(100 * asPercent(l), asDecimalRatio(a), asDecimalRatio(b)),\n    });\n  },\n  gray: (g: Value, alpha: Value): Color => {\n    return new Color({\n      a: asDecimalRatio(alpha, 1.0),\n      ...labToRgb(100 * asPercent(g), 0, 0),\n    });\n  },\n  filter: (c: Color, filterValue: StringValue): Color => {\n    const filterName = asString(filterValue, 'none').toLowerCase();\n    const result = filterColor(c, asString(filterValue, 'none').toLowerCase());\n    if (!result) {\n      throwError(\n        ErrorCode.InvalidArgument,\n        'filter()',\n        `\"${filterName}\"`,\n        getSuggestion(filterName, [\n          'none',\n          'grayscale',\n          'protanopia',\n          'deuteranopia',\n          'tritanopia',\n        ])\n      );\n    }\n\n    return result;\n  },\n  mix: (c1: Value, c2: Value, weight: Value, model?: Value): Color => {\n    // @todo: support additional color models. See color-convert npm module.\n    const modelName = asString(model, 'hsl').toLowerCase();\n    const color1 = asColor(c1);\n    if (!color1) return undefined;\n    const color2 = asColor(c2);\n    if (!color2) return color1;\n\n    const w = asDecimalRatio(weight, 0.5);\n\n    let alpha = typeof color2.a === 'number' ? color2.a : 1.0;\n    alpha =\n      alpha + ((typeof color1.a === 'number' ? color2.a : 1.0) - alpha) * w;\n    if (modelName === 'rgb') {\n      return new Color({\n        r: color1.r + (color2.r - color1.r) * w,\n        g: color1.g + (color2.g - color1.g) * w,\n        b: color1.b + (color2.b - color1.b) * w,\n        a: alpha,\n      });\n    } else if (modelName === 'hsl') {\n      return new Color({\n        h: color1.h + (color2.h - color1.h) * w,\n        s: color1.s + (color2.s - color1.s) * w,\n        l: color1.l + (color2.l - color1.l) * w,\n        a: alpha,\n      });\n    } else if (modelName === 'lab') {\n      const { L: L1, a: a1, b: b1 } = rgbToLab(color1.r, color1.g, color1.b);\n      const { L: L2, a: a2, b: b2 } = rgbToLab(color2.r, color2.g, color2.b);\n\n      return new Color({\n        ...labToRgb(L1 + (L2 - L1) * w, a1 + (a2 - a1) * w, b1 + (b2 - b1) * w),\n        a: alpha,\n      });\n    } else {\n      throwError(\n        ErrorCode.InvalidArgument,\n        'mix()',\n        `\"${modelName}\"`,\n        getSuggestion(modelName, ['hsl', 'lab', 'rgb'])\n      );\n    }\n  },\n  saturate: (c: Value, v: Value): Color => {\n    const color = asColor(c);\n    if (!color) return undefined;\n    return new Color({\n      h: color.h,\n      s: color.s + (1.0 - color.s) * asDecimalRatio(v, 0.1),\n      l: color.l,\n      a: color.a,\n    });\n  },\n  desaturate: (c: Value, v: Value): Color => {\n    const color = asColor(c);\n    if (!color) return undefined;\n    return new Color({\n      h: color.h,\n      s: color.s - color.s * asDecimalRatio(v, 0.1),\n      l: color.l,\n      a: color.a,\n    });\n  },\n  lighten: (c: Value, v: Value): Color => {\n    const color = asColor(c);\n    if (!color) return undefined;\n    return new Color({\n      h: color.h,\n      s: color.s,\n      l: color.l + (1.0 - color.l) * asDecimalRatio(v, 0.1),\n      a: color.a,\n    });\n  },\n  darken: (c: Value, v: Value): Color => {\n    const color = asColor(c);\n    if (!color) return undefined;\n    return new Color({\n      h: color.h,\n      s: color.s,\n      l: color.l - color.l * asDecimalRatio(v, 0.1),\n      a: color.a,\n    });\n  },\n  rotateHue: (c: Value, v: Value): Color => {\n    const color = asColor(c);\n    if (color) {\n      if (!v || (!isAngle(v) && !isNumber(v))) {\n        return color;\n      } else {\n        return new Color({\n          h: (color.h + asDegree(v) + 360) % 360,\n          s: color.s,\n          l: color.l,\n          a: color.a,\n        });\n      }\n    }\n    return undefined;\n  },\n  complement: (c: Value): Color => {\n    const color = asColor(c);\n    if (color) {\n      return new Color({\n        h: (color.h + 180) % 360,\n        s: color.s,\n        l: color.l,\n        a: color.a,\n      });\n    }\n    return undefined;\n  },\n  /**\n   * Return either dark (default #000) or light (default #fff) depending on\n   * the contrast ratio (as per WCAG 2.0 spec)\n   * WCAG 2.0\n   * - AA\n   *     - small text: contrast ratio > 4.5:1\n   *     - large text (18px, bold): contrast ratio > 3.1\n   * - AAA\n   *     - small text: contrast ratio > 7:1\n   *     - large text (18px, bold): contrast ratio > 4.5.1\n   */\n  contrast: (base: Value, dark: Value, light: Value): Color => {\n    const baseColor = asColor(base);\n    const darkColor = asColor(dark) || blackColor;\n    const lightColor = asColor(light) || whiteColor;\n\n    let darkContrast, lightContrast;\n\n    // Calculate contrast ratios for each color\n    // See https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    const baseLuma = baseColor.luma();\n    const darkLuma = darkColor.luma();\n    const lightLuma = lightColor.luma();\n    if (baseLuma > darkLuma) {\n      darkContrast = (baseLuma + 0.05) / (darkLuma + 0.05);\n    } else {\n      darkContrast = (darkLuma + 0.05) / (baseLuma + 0.05);\n    }\n    if (baseLuma > lightLuma) {\n      lightContrast = (baseLuma + 0.05) / (lightLuma + 0.05);\n    } else {\n      lightContrast = (lightLuma + 0.05) / (baseLuma + 0.05);\n    }\n\n    return darkContrast > lightContrast ? darkColor : lightColor;\n  },\n  rgba: (r, g, b, a): Value =>\n    new Color({\n      r: asDecimalByte(r),\n      g: asDecimalByte(g),\n      b: asDecimalByte(b),\n      a: asDecimalRatio(a, 1.0),\n    }),\n  hsla: (h, s, l, a): Value =>\n    new Color({\n      h: asDegree(h),\n      s: asPercent(s),\n      l: asPercent(l),\n      a: asDecimalRatio(a, 1.0),\n    }),\n  tint: (c: Value, w: Value): Color => {\n    const cValue = asColor(c);\n    const wValue = asDecimalRatio(w, 0.5);\n    return mixColor(whiteColor, cValue, wValue) as Color;\n  },\n  shade: (c: Value, w: Value): Color => {\n    const cValue = asColor(c);\n    const wValue = asDecimalRatio(w, 0.5);\n    return mixColor(blackColor, cValue, wValue) as Color;\n  },\n\n  // OKLCh color space functions\n  oklch: (l: Value, c: Value, h: Value, a?: Value): Color =>\n    new Color({\n      okL: asPercent(l),\n      okC: asPercent(c),\n      okH: asDegree(h),\n      a: asDecimalRatio(a, 1.0),\n    }),\n};\n\nexport function darkMode(v: Value): Value {\n  if (v instanceof ArrayValue) {\n    return new ArrayValue(v.value.map((item) => darkMode(item)));\n  }\n  if (isColor(v)) {\n    return new Color({\n      okL: v.okL + 0.02,\n      okC: v.okC + 0.01,\n      okH: v.okH + 0.03,\n      a: v.a,\n    });\n  }\n  return v;\n}\n","import { throwErrorWithContext, ErrorCode, SyntaxError } from './errors';\nimport { terminal } from './terminal';\nimport { getSuggestion } from './utils';\nimport {\n  Value,\n  Frequency,\n  FrequencyUnit,\n  Time,\n  TimeUnit,\n  Length,\n  LengthUnit,\n  BaseLengthUnits,\n  MultiLength,\n  Angle,\n  AngleUnit,\n  StringValue,\n  Percentage,\n  NumberValue,\n  ArrayValue,\n  compareValue,\n  asColor,\n  asInteger,\n  asPercent,\n  asDegree,\n  isArray,\n  isAngle,\n  isColor,\n  isLength,\n  isNumber,\n  isFrequency,\n  isPercentage,\n  isTime,\n  isString,\n  isZero,\n  makeValueFrom,\n  assertLength,\n  scaleLength,\n  promoteToMulti,\n} from './value';\nimport {\n  COLOR_ARGUMENTS_FUNCTIONS,\n  COLOR_FUNCTION_ARGUMENTS,\n  COLOR_FUNCTIONS,\n  darkMode,\n  scaleColor,\n} from './color-functions';\n\n// @todo: convert frequency and time (1/s -> Hz)\n// @todo: have a base-font-size property in the tokenfile as well (under global: )\n\nexport interface ValueParserOptions {\n  baseUnits?: BaseLengthUnits;\n\n  /** When an alias (identifier in {}) is encountered, this function\n   * is called to resolve it.\n   * Return either the resolved value, or a string which is a suggestion\n   * for the best matching identifier.\n   */\n  aliasResolver?: (identifier: string) => Value | string;\n}\n\n// Definition of the functions that can be used in the expression\n// of token values.\nlet FUNCTIONS: {\n  [key: string]: (...args: Value[]) => Value;\n} = {};\nFUNCTIONS = {\n  /** The calc() function is a no-op, but it's there for compatibility with CSS */\n  'calc': (x: Value): Value => x,\n  'min': (a: Value, b: Value): Value => {\n    return compareValue(a, b) < 0 ? a : b;\n  },\n  'max': (a: Value, b: Value): Value => {\n    return compareValue(a, b) < 0 ? b : a;\n  },\n  'clamp'(a: Value, b: Value, c: Value): Value {\n    return compareValue(b, a) < 0 ? a : compareValue(b, c) > 0 ? c : b;\n  },\n\n  'scale': (arg1: Value, arg2: Value, arg3: Value, arg4: Value): ArrayValue => {\n    if (isColor(arg1)) return scaleColor(arg1, arg2, arg3, arg4);\n    if (isLength(arg1)) return scaleLength(arg1, arg2);\n  },\n  'dark-mode': (value: Value): Value => darkMode(value),\n  ...COLOR_FUNCTIONS,\n};\n\nconst FUNCTION_ARGUMENTS = {\n  calc: 'any',\n  min: 'any, any',\n  max: 'any, any',\n  clamp: 'any, any, any',\n  ...COLOR_FUNCTION_ARGUMENTS,\n};\n\nfunction validateArguments(fn: string, args: any[]): void {\n  const expectedArguments = FUNCTION_ARGUMENTS[fn]\n    ?.split(',')\n    .map((x) => x.trim());\n  if (expectedArguments) {\n    expectedArguments.forEach((x: string, i: number) => {\n      const types = x.split('|').map((x) => x.trim());\n\n      if (!types.includes('none') && !args[i]) {\n        throw new SyntaxError(\n          ErrorCode.MissingArgument,\n          String(i + 1),\n          fn,\n          types.join(', ')\n        );\n      }\n\n      if (\n        args[i] &&\n        !types.includes('any') &&\n        !types.includes(args[i]?.type())\n      ) {\n        throw new SyntaxError(\n          ErrorCode.ExpectedArgument,\n          String(i + 1),\n          fn,\n          types.join(', ')\n        );\n      }\n    });\n    if (args.length > expectedArguments.length) {\n      throw new SyntaxError(\n        ErrorCode.TooManyArguments,\n        fn,\n        expectedArguments.join(', ')\n      );\n    }\n  }\n}\n\nclass Stream {\n  /**\n   * @param {string} s - A token value expression\n   * @param {object} options\n   * @param {number} \"base-font-size\" - The number of pixels of 1rem.\n   */\n  s = '';\n  index = 0;\n  options: ValueParserOptions = {};\n  constructor(s: string, options: ValueParserOptions = {}) {\n    this.s = s;\n    this.index = 0;\n    this.options = options;\n  }\n  isEOF(): boolean {\n    return this.index >= this.s.length;\n  }\n  lookAhead(n: number): string {\n    return this.s.slice(this.index, this.index + n);\n  }\n\n  skipWhiteSpace(): void {\n    this.match(/^\\s*/);\n  }\n  match(target: string): boolean;\n  match(target: RegExp): string;\n  match(target: string | RegExp): string | boolean {\n    if (typeof target === 'string') {\n      if (this.lookAhead(target.length) === target) {\n        this.index += target.length;\n        return target;\n      }\n    } else {\n      const m = this.s.slice(this.index).match(target);\n      if (m && m[0]) {\n        this.index += m[0].length;\n        return m[1] || true;\n      }\n    }\n    return undefined;\n  }\n\n  error(code: ErrorCode, ...args: string[]): void {\n    const prefix = this.s.slice(0, this.index).match(/^(.*)/)?.[1] ?? '';\n    const suffix = this.s.slice(this.index).match(/(.*)$/)?.[1] ?? '';\n    throwErrorWithContext(\n      [prefix + terminal.dim(suffix), ' '.repeat(prefix.length) + '⇧'],\n      code,\n      ...args\n    );\n  }\n\n  /** Apply an arithmetic operation when at least one of the operands is a Length\n   *\n   */\n  applyOpToLength(\n    op: string,\n    lhs: Length | NumberValue,\n    rhs: Length | NumberValue\n  ): Value {\n    if (isNumber(lhs) && op === '/') this.error(ErrorCode.InvalidOperand);\n    if (!isNumber(lhs) && !isNumber(rhs) && op === '*')\n      this.error(ErrorCode.InvalidOperand);\n\n    const opFn = {\n      '+': (a: any, b: any): any => a + b,\n      '-': (a: any, b: any): any => a - b,\n      '*': (a: any, b: any): any => a * b,\n      '/': (a: any, b: any): any => a / b,\n    }[op];\n\n    if (isNumber(lhs)) {\n      assertLength(rhs);\n      if (rhs.unit === 'multi') {\n        const multiLength = {};\n        Object.keys(rhs.value as MultiLength).forEach((unit) => {\n          multiLength[unit] = opFn(lhs.value, rhs.value[unit]);\n        });\n        return new Length(multiLength);\n      }\n      return new Length(opFn(lhs.value, rhs.value), rhs.unit);\n    }\n    if (isNumber(rhs)) {\n      if (typeof lhs.value === 'number') {\n        return new Length(opFn(lhs.value, rhs.value), lhs.unit);\n      }\n      const multiLength = {};\n      Object.keys(lhs.value as MultiLength).forEach((unit) => {\n        multiLength[unit] = opFn(lhs.value[unit], rhs.value);\n      });\n      return new Length(multiLength);\n    }\n    // We've dealt with the case where one of the two operand is a number.\n    // Now, both operands are Length\n    if (op === '/') {\n      if (lhs.unit === 'multi' || rhs.unit === 'multi') {\n        this.error(ErrorCode.InvalidOperand);\n      }\n\n      if (lhs.unit === rhs.unit) {\n        // If the units are the same, we can calculate the result\n        // even if the units are relative (em, vh, etc...)\n        return new NumberValue((lhs.value as number) / (rhs.value as number));\n      } else {\n        // The units are not the same. Attempt to conver them to a scalar\n        return new NumberValue(lhs.canonicalScalar() / rhs.canonicalScalar());\n      }\n    }\n    // Normalize them both to multi-units\n    const lhsMulti = promoteToMulti(lhs);\n    const rhsMulti = promoteToMulti(rhs);\n\n    // Apply the operation on the union of both operands\n    const multiLength = {};\n    [\n      ...Object.keys(lhsMulti.value as MultiLength),\n      ...Object.keys(rhsMulti.value as MultiLength),\n    ].forEach((unit) => {\n      if (typeof rhsMulti.value[unit] === 'undefined') {\n        multiLength[unit] = lhsMulti.value[unit];\n      } else if (typeof lhsMulti.value[unit] === 'undefined') {\n        multiLength[unit] = rhsMulti.value[unit];\n      } else {\n        multiLength[unit] = opFn(lhsMulti.value[unit], rhsMulti.value[unit]);\n      }\n    });\n    return new Length(multiLength);\n  }\n\n  parseUnit(num: number): Value {\n    // Check if a number (or group) is followed (immediately) by a unit\n    if (this.match('%')) {\n      return new Percentage(num);\n    }\n    let unit = this.match(\n      /^(em|ex|ch|rem|vw|vh|vmin|vmax|px|cm|mm|in|pt|pc|Q)/\n    );\n    if (unit) {\n      return new Length(num, unit as LengthUnit);\n    }\n    unit = this.match(/^(deg|°|rad|grad|turn)/);\n    if (unit) {\n      return new Angle(num, (unit === '°' ? 'deg' : unit) as AngleUnit);\n    }\n    unit = this.match(/^(ms|s)/);\n    if (unit) {\n      return new Time(num, unit as TimeUnit);\n    }\n    unit = this.match(/^(khz|hz|kHz|Hz)/);\n    if (unit) {\n      return new Frequency(num, unit.toLowerCase() as FrequencyUnit);\n    }\n    unit = this.match(/^([a-zA-Z]+)/);\n    if (unit) {\n      this.error(ErrorCode.UnknownUnit, unit);\n    }\n    return new NumberValue(num);\n  }\n\n  parseIndex(v: Value): Value {\n    let result = v;\n    if (this.match('[')) {\n      if (v.type() !== 'array') {\n        this.error(ErrorCode.UnexpectedOpenBracket);\n      } else {\n        const index = asInteger(this.parseExpression(), NaN);\n        if (isNaN(index)) this.error(ErrorCode.ExpectedIntegerIndex);\n        result = (v as ArrayValue).get(index);\n        this.skipWhiteSpace();\n        if (!this.match(']')) {\n          this.error(ErrorCode.ExpectedCloseBracket);\n        }\n      }\n    }\n    return result;\n  }\n\n  parseLiteral(): Value {\n    let result: Value;\n    const saveIndex = this.index;\n    const op = this.match(/^\\s*([+\\-])\\s*/);\n    if (op) {\n      const operand = this.parseLiteral();\n      if (op === '-') {\n        // Unary operator\n        if (isPercentage(operand)) {\n          return new Percentage(-100 * asPercent(operand));\n        }\n        if (isNumber(operand)) {\n          return new NumberValue(-operand.value);\n        }\n        if (isAngle(operand)) {\n          return new Angle(-operand.value, operand.unit);\n        }\n        if (isLength(operand)) {\n          return this.applyOpToLength('-', new Length(0, 'px'), operand);\n        }\n        this.error(ErrorCode.InvalidUnaryOperand);\n      }\n      return operand;\n    }\n\n    const num = this.match(/^([0-9]*\\.[0-9]+|\\.?[0-9]+)/);\n    if (num) {\n      result = this.parseUnit(parseFloat(num));\n    }\n\n    if (!result && this.match('[')) {\n      // It's an array literal\n      const array = [];\n      while (this.lookAhead(1) !== ']' && !this.isEOF()) {\n        const element = this.parseExpression();\n        if (!element) {\n          this.error(ErrorCode.SyntaxError);\n        }\n        array.push(element);\n        this.match(/^(\\s*,?|\\s+)/);\n      }\n\n      if (this.isEOF()) {\n        this.error(ErrorCode.ExpectedCloseBracket);\n      }\n      this.match(']');\n      return new ArrayValue(array);\n    }\n\n    if (!result && this.match('\"')) {\n      // It's a string\n      let s = '';\n      while (this.lookAhead(1) !== '\"' && !this.isEOF()) {\n        if (this.lookAhead(1) === '\\\\') {\n          // Escape character\n          s += this.s[this.index + 1];\n          this.index += 2;\n        } else {\n          s += this.s[this.index];\n          this.index += 1;\n        }\n      }\n\n      if (this.isEOF()) {\n        this.error(ErrorCode.ExpectedQuote);\n      }\n      this.match('\"');\n      return new StringValue(s);\n    }\n\n    if (!result && this.match('{')) {\n      // It's an alias\n      const identifier = this.match(/^([a-zA-Z_-][a-zA-Z0-9\\._-]*)/);\n      if (identifier) {\n        let alias = this.options?.aliasResolver(identifier);\n        if (typeof alias === 'string') {\n          // If that didn't work, try an implicit color scale...\n          // e.g. \"red-200\"\n          const m = identifier.match(/^(.+)-([0-9]{2,3})$/);\n          if (m) {\n            const resolvedValue = this.options?.aliasResolver(m[1]);\n            if (typeof resolvedValue !== 'string') {\n              if (isArray(resolvedValue)) {\n                const index = Math.round(parseInt(m[2]) / 100);\n                alias = resolvedValue.get(index);\n              } else if (isColor(resolvedValue)) {\n                const index = Math.round(parseInt(m[2]) / 100);\n\n                alias = scaleColor(resolvedValue)?.get(index);\n              } else if (isLength(resolvedValue)) {\n                const index =\n                  m[2] === '50' ? 0 : Math.round(parseInt(m[2]) / 100);\n                alias = scaleLength(resolvedValue)?.get(index);\n              }\n            } else if (typeof resolvedValue === 'string') {\n              // A string indicate the identifier could not be\n              // resolved. The string is the suggestion\n              this.error(ErrorCode.UnknownToken, m[1], resolvedValue);\n            } else this.error(ErrorCode.InvalidOperand);\n          }\n        }\n        if (typeof alias === 'string') {\n          this.error(ErrorCode.UnknownToken, identifier, alias);\n        }\n        result = alias as Value;\n        if (result) {\n          // Clone the result of the alias, since we'll need to change\n          // the source\n          result = makeValueFrom(result);\n          result.setSource('{' + identifier + '}');\n        }\n      }\n      if (!this.match('}')) {\n        this.error(ErrorCode.ExpectedCloseCurlyBracket);\n      }\n    }\n\n    if (!result) {\n      // Attempt to parse a color as a hex value\n      result = asColor(this.match(/^\\s*(#[0-9a-fA-F]{3,8})/));\n    }\n    if (!result) {\n      // Backtrack and attempt to parse as a color name\n      this.index = saveIndex;\n      result = asColor(this.match(/^\\s*([a-zA-Z]+)/));\n    }\n    if (!result) {\n      // Backtrack\n      this.index = saveIndex;\n    }\n    return result;\n  }\n\n  /* Argument to color functions (rgb, hsl, etc...) have a bit of \n    a peculiar syntax. The arguments can be either comma or space delimited, \n    and the last one (the opacity) can be space, comma or \"/\". \n    And it's optional */\n  parseColorArguments(): (Value | Value)[] {\n    const result: (Value | Value)[] = [];\n\n    this.skipWhiteSpace();\n    if (!this.match('(')) return undefined;\n\n    let arg = this.parseExpression();\n    if (arg) {\n      result.push(arg);\n\n      if (!this.match(/^(\\s*,?|\\s+)/)) {\n        this.match(')');\n        return result;\n      }\n\n      arg = this.parseExpression();\n      if (arg) {\n        result.push(arg);\n\n        if (!this.match(/^(\\s*,?|\\s+)/)) {\n          this.match(')');\n          return result;\n        }\n\n        arg = this.parseExpression();\n        if (arg) {\n          result.push(arg);\n\n          // Last argument (opacity) can be separated with a \"slash\"\n          if (!this.match(/^(\\s*,?|\\s+|\\s*\\/)/)) {\n            this.match(')');\n            return result;\n          }\n\n          arg = this.parseExpression();\n          if (arg) {\n            result.push(arg);\n          }\n        }\n      }\n    }\n\n    this.match(')');\n\n    return result;\n  }\n\n  parseArguments(): Value[] {\n    this.skipWhiteSpace();\n    if (!this.match('(')) return undefined;\n\n    const result = [];\n    while (this.lookAhead(1) !== ')' && !this.isEOF()) {\n      const argument = this.parseExpression();\n      if (!argument) {\n        this.error(ErrorCode.SyntaxError);\n      }\n      result.push(argument);\n      this.match(/^(\\s*,?|\\s+)/);\n    }\n    if (this.isEOF()) {\n      this.error(ErrorCode.ExpectedCloseParen);\n    }\n    this.match(')');\n\n    return result;\n  }\n\n  parseCall(): Value {\n    const saveIndex = this.index;\n    const fn = this.match(/^([a-zA-Z\\-]+)/);\n    if (fn) {\n      if (!FUNCTIONS[fn]) {\n        if (this.lookAhead(1) === '(') {\n          this.error(\n            ErrorCode.UnknownFunction,\n            fn,\n            getSuggestion(fn, FUNCTIONS)\n          );\n        }\n      } else {\n        const args = COLOR_ARGUMENTS_FUNCTIONS.includes(fn)\n          ? this.parseColorArguments()\n          : this.parseArguments();\n        if (args) {\n          try {\n            validateArguments(fn, args);\n          } catch (err) {\n            if (err.code) {\n              this.error(err.code, ...err.args);\n            } else {\n              this.error(err.message);\n            }\n          }\n          return FUNCTIONS[fn](...args);\n        } else {\n          this.error(ErrorCode.SyntaxError);\n        }\n      }\n    }\n    // Backtrack\n    this.index = saveIndex;\n    return undefined;\n  }\n\n  parseTerminal(): Value {\n    const result = this.parseCall() || this.parseGroup() || this.parseLiteral();\n\n    if (!result) return result;\n\n    return this.parseIndex(result);\n  }\n\n  parseFactor(): Value {\n    let lhs = this.parseTerminal();\n\n    let op = this.match(/^\\s*([*|/])\\s*/);\n    while (op) {\n      const opFn = {\n        '*': (a: any, b: any): any => a * b,\n        '/': (a: any, b: any): any => a / b,\n      }[op];\n      // Multiplication or division\n      const rhs = this.parseTerminal();\n\n      if (!rhs) this.error(ErrorCode.ExpectedOperand);\n      // Type combination rules (for * AND /)\n      // ---\n      // num * num            -> num\n      // num * angle          -> angle\n      // num * percent        -> percent\n      // num * length         -> length\n      // Other combinations are invalid, but division of two\n      // values of the same type is valid (and yields a unitless number)\n      if (isNumber(rhs)) {\n        if (isNumber(lhs)) {\n          lhs = new NumberValue(opFn(lhs.value, rhs.value));\n        } else if (isPercentage(lhs)) {\n          lhs = new Percentage(opFn(lhs.value, rhs.value));\n        } else if (isLength(lhs)) {\n          lhs = this.applyOpToLength(op, lhs, rhs);\n        } else if (isAngle(lhs)) {\n          lhs = new Angle(opFn(lhs.value, rhs.value), lhs.unit);\n        } else if (isFrequency(lhs)) {\n          lhs = new Frequency(opFn(lhs.value, rhs.value), lhs.unit);\n        } else if (isTime(lhs)) {\n          lhs = new Time(opFn(lhs.value, rhs.value), lhs.unit);\n        }\n      } else if ((isNumber(lhs) || isLength(lhs)) && isLength(rhs)) {\n        return this.applyOpToLength(op, lhs, rhs);\n      } else if (isNumber(lhs)) {\n        if (isPercentage(rhs)) {\n          lhs = new Percentage(opFn(lhs.value, rhs.value));\n        } else if (isLength(rhs)) {\n          lhs = this.applyOpToLength(op, lhs, rhs);\n        } else if (isAngle(rhs)) {\n          lhs = new Angle(opFn(lhs.value, rhs.value), rhs.unit);\n        } else if (isFrequency(rhs)) {\n          lhs = new Frequency(opFn(lhs.value, rhs.value), rhs.unit);\n        } else if (isTime(rhs)) {\n          lhs = new Time(opFn(lhs.value, rhs.value), rhs.unit);\n        }\n      } else if (op === '/' && lhs.type() === rhs.type()) {\n        lhs = new NumberValue(lhs.canonicalScalar() / rhs.canonicalScalar());\n      } else {\n        this.error(ErrorCode.InvalidOperand);\n      }\n      op = this.match(/^\\s*([*|/])\\s*/);\n    }\n\n    return lhs;\n  }\n\n  parseTerm(): Value {\n    let lhs = this.parseFactor();\n\n    let op = this.match(/^\\s*([+\\-])\\s*/);\n\n    while (op) {\n      const opFn = {\n        '+': (a: any, b: any): any => a + b,\n        '-': (a: any, b: any): any => a - b,\n      }[op];\n      // Type combination rules (for + AND -)\n      // ---\n      // string + any             -> string\n      // any + string             -> string\n      // num + num                -> num\n      // percentage + num         -> percent\n      // num + percentage         -> percent\n      // percentage + percentage  -> percent\n      // angle + angle            -> angle\n      // length + length          -> length\n      // Other combinations are invalid.\n      const rhs = this.parseFactor();\n\n      if (!rhs) this.error(ErrorCode.ExpectedOperand);\n\n      if (isString(lhs) || isString(rhs)) {\n        if (op === '-') this.error(ErrorCode.InvalidOperand);\n        lhs = new StringValue(opFn(lhs.css(), rhs.css()));\n      } else if (isNumber(lhs) && isNumber(rhs)) {\n        lhs = new NumberValue(opFn(lhs.value, rhs.value));\n      } else if (\n        (isZero(lhs) || isPercentage(lhs)) &&\n        (isZero(rhs) || isPercentage(rhs))\n      ) {\n        lhs = new Percentage(100 * opFn(asPercent(lhs), asPercent(rhs)));\n      } else if (isZero(lhs) && isTime(rhs)) {\n        lhs = new Time(opFn(0, rhs.value), rhs.unit);\n      } else if (isTime(lhs) && isZero(rhs)) {\n        lhs = new Time(lhs.value, lhs.unit);\n      } else if (isTime(lhs) && isTime(rhs)) {\n        if (lhs.unit === rhs.unit) {\n          lhs = new Time(opFn(lhs.value, rhs.value), lhs.unit);\n        } else {\n          lhs = new Time(\n            opFn(lhs.canonicalScalar(), rhs.canonicalScalar()),\n            's'\n          );\n        }\n      } else if (isZero(lhs) && isFrequency(rhs)) {\n        lhs = new Frequency(opFn(0, rhs.value), rhs.unit);\n      } else if (isFrequency(lhs) && isZero(rhs)) {\n        lhs = new Frequency(lhs.value, lhs.unit);\n      } else if (isFrequency(lhs) && isFrequency(rhs)) {\n        if (lhs.unit === rhs.unit) {\n          lhs = new Frequency(opFn(lhs.value, rhs.value), lhs.unit);\n        } else {\n          lhs = new Frequency(\n            opFn(lhs.canonicalScalar(), rhs.canonicalScalar()),\n            'hz'\n          );\n        }\n      } else if (isZero(lhs) && isAngle(rhs)) {\n        lhs = new Angle(opFn(0, rhs.value), rhs.unit);\n      } else if (isAngle(lhs) && isZero(rhs)) {\n        lhs = new Angle(lhs.value, lhs.unit);\n      } else if (isAngle(lhs) && isAngle(rhs)) {\n        if (lhs.unit === rhs.unit) {\n          lhs = new Angle(opFn(lhs.value, rhs.value), lhs.unit);\n        } else {\n          lhs = new Angle(opFn(asDegree(lhs), asDegree(rhs)), 'deg');\n        }\n      } else if (\n        (isZero(lhs) || isLength(lhs)) &&\n        (isZero(rhs) || isLength(rhs))\n      ) {\n        lhs = this.applyOpToLength(op, lhs, rhs);\n      } else {\n        this.error(ErrorCode.InvalidOperand);\n      }\n      op = this.match(/^\\s*([+\\-])\\s*/);\n    }\n\n    return lhs;\n  }\n\n  parseGroup(): Value {\n    let result: Value;\n    if (this.match('(')) {\n      result = this.parseExpression();\n      this.skipWhiteSpace();\n      if (!this.match(')')) {\n        this.error(ErrorCode.ExpectedCloseParen);\n      }\n    }\n\n    if (result && isNumber(result)) {\n      // If the value of the group is a number\n      // check and handle units that might be after it.\n      // \"(12 + 5)px\"\n      result = this.parseUnit(result.value);\n    }\n\n    return result;\n  }\n\n  parseExpression(): Value {\n    this.skipWhiteSpace();\n    return this.parseTerm();\n  }\n}\n\nexport function parseValue(\n  expression: string,\n  options: ValueParserOptions = {}\n): Value {\n  const stream = new Stream(expression, options);\n  const result = stream.parseExpression();\n  stream.skipWhiteSpace();\n  if (!stream.isEOF()) {\n    // There was some additional content that we couldn't parse.\n    // Return 'undefined' to avoid partially parsing things\n    // that shouldn't be. For example \"3px red\" should\n    // be interpreted as a string, not as \"3px\".\n    return undefined;\n  }\n  if (result) {\n    result.setSource(expression);\n  }\n  return result;\n}\n","/*\n- json/asset\n- json/nested\n- json/flat\n- sketch/palette\n- sketch/palette/v2\n*/\nconst fs = require('fs');\n\nimport { Format, RenderContext } from './formats';\n\nexport const GenericFormats: { formats: { [key: string]: Format } } = {\n  formats: {\n    'yaml': {\n      ext: '.yaml',\n\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/yaml.hbs', 'utf-8'),\n          context\n        ),\n    },\n\n    'json': {\n      ext: '.json',\n\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/json.hbs', 'utf-8'),\n          context\n        ),\n\n      handlebarsHelpers: {},\n    },\n    'data-dump': {\n      ext: '.yaml',\n\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/data-dump.hbs', 'utf-8'),\n          context\n        ),\n    },\n  },\n};\n","// @todo more formats (https://github.com/amzn/style-dictionary/blob/3d0d1c0356d42fc83f905a7e7e4b1c662c77de0b/lib/common/formats.js)\n\n// xCode .colorset: https://developer.apple.com/library/archive/documentation/Xcode/Reference/xcode_ref-Asset_Catalog_Format/Named_Color.html#//apple_ref/doc/uid/TP40015170-CH59-SW1\n\n/*\n- sketch/palette\n- sketch/palette/v2\n*/\n\nconst fs = require('fs');\nimport { Format, RenderContext } from './formats';\n\nexport const WebFormats: { formats: { [key: string]: Format } } = {\n  formats: {\n    sass: {\n      ext: '.scss',\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/sass.hbs', 'utf-8'),\n          context\n        ),\n    },\n    css: {\n      ext: '.css',\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/css.hbs', 'utf-8'),\n          context\n        ),\n    },\n  },\n};\n","const marked = require('marked');\nconst highlight = require('highlight.js');\nconst handlebars = require('handlebars');\nconst fs = require('fs');\nconst chroma = require('chroma-js');\n\nimport { Color, isColor, isColorArray, roundTo } from './value';\nimport { getSimilarColors, getDeltaE, filterColor } from './color-functions';\nimport { RenderContext, Format } from './formats';\n\nfunction renderColorSection(context: RenderContext): string {\n  let result = '';\n  const handlebarsContext = { colors: [], colorRamps: [], group: '' };\n  const allColors: { name: string; color: Color }[] = [];\n  context.themes.forEach((theme) => {\n    theme.tokens.forEach((token) => {\n      if (isColor(token.tokenValue))\n        allColors.push({\n          name:\n            token.tokenId +\n            (theme.theme === '_' || theme.theme === ''\n              ? ''\n              : '.' + theme.theme),\n          color: token.tokenValue,\n        });\n    });\n  });\n\n  context.themes.forEach((theme) => {\n    handlebarsContext.group =\n      context.themes.length === 1\n        ? ''\n        : theme.theme === '_'\n        ? 'Base'\n        : theme.theme;\n    handlebarsContext.colors = [];\n    theme.tokens.forEach((token) => {\n      if (isColor(token.tokenValue)) {\n        const color = token.tokenValue as Color;\n        let cls = color.luma() >= 1.0 ? 'frame ' : '';\n        if (color.luma() > 0.42) cls += 'light';\n        let opaqueColor: Color;\n        if (color.a < 1.0) {\n          opaqueColor = new Color(color);\n          opaqueColor.a = 1.0;\n        }\n        const similarColors = getSimilarColors(color, allColors);\n        const similarProtanopiaColors = getSimilarColors(\n          color,\n          allColors,\n          'protanopia'\n        );\n        const similarDeuteranopiaColors = getSimilarColors(\n          color,\n          allColors,\n          'deuteranopia'\n        )?.filter((x) => !similarColors?.includes(x));\n        const similarTritanopiaColors = getSimilarColors(\n          color,\n          allColors,\n          'tritanopia'\n        );\n        const similarColorsColorDeficient = [];\n        [\n          ...(similarDeuteranopiaColors ?? []),\n          ...(similarTritanopiaColors ?? []),\n          ...(similarProtanopiaColors ?? []),\n        ].forEach((x) => {\n          // Add to the list if it's not:\n          // 1/ already in the list and\n          // 2/ not in the \"normal\" similar colors\n          // We want this list to only include colors that are similar\n          // for people with color deficiency\n          if (\n            similarColorsColorDeficient.findIndex((y) => y.name === x.name) < 0\n          ) {\n            if (\n              !similarColors ||\n              similarColors.findIndex((y) => y.name === x.name) < 0\n            ) {\n              similarColorsColorDeficient.push(x);\n            }\n          }\n        });\n        handlebarsContext.colors.push({\n          name: token.tokenId,\n          value: token.tokenValue,\n          source: color.getSource(),\n          css: color.css(),\n          protanopiaCss: filterColor(color, 'protanopia').css(),\n          deuteranopiaCss: filterColor(color, 'deuteranopia').css(),\n          tritanopiaCss: filterColor(color, 'tritanopia').css(),\n          comment: token.tokenDefinition.comment ?? '',\n          cls,\n          opaqueColor: opaqueColor?.css(),\n          similarColors: {\n            normal: similarColors\n              ? similarColors.map((x) => {\n                  return {\n                    name: x.name,\n                    css: x.color.css(),\n                    deltaE: roundTo(x.deltaE, 2),\n                  };\n                })\n              : null,\n            colorDeficient: similarColorsColorDeficient\n              ? similarColorsColorDeficient.map((x) => {\n                  return {\n                    name: x.name,\n                    css: x.color.css(),\n                    deltaE: roundTo(x.deltaE, 2),\n                  };\n                })\n              : null,\n            protanopia: similarProtanopiaColors\n              ? similarProtanopiaColors.map((x) => {\n                  return {\n                    name: x.name,\n                    css: x.color.css(),\n                    deltaE: roundTo(x.deltaE, 2),\n                  };\n                })\n              : null,\n            deuteranopia: similarDeuteranopiaColors\n              ? similarDeuteranopiaColors.map((x) => {\n                  return {\n                    name: x.name,\n                    css: x.color.css(),\n                    deltaE: roundTo(x.deltaE, 2),\n                  };\n                })\n              : null,\n            tritanopia: similarTritanopiaColors\n              ? similarTritanopiaColors.map((x) => {\n                  return {\n                    name: x.name,\n                    css: x.color.css(),\n                    deltaE: roundTo(x.deltaE, 2),\n                  };\n                })\n              : null,\n          },\n        });\n      } else if (isColorArray(token.tokenValue)) {\n        let previousColor;\n        \n        // Generate visualization data for color ramps\n        const rampColors = token.tokenValue.value.map((x) => x as Color);\n        const lightnessData = rampColors.map((color, index) => {\n          const oklch = chroma(color.hex()).oklch();\n          const lightness = oklch[0] || 0;\n          const chroma_val = oklch[1] || 0;\n          const hue = oklch[2] || 0;\n          \n          // Calculate positions for lightness curve\n          const x = (index / (rampColors.length - 1)) * 300;\n          const maxLightness = 1.0;\n          const minLightness = 0.0;\n          const y = 150 - ((lightness - minLightness) / (maxLightness - minLightness)) * 120;\n          \n          return {\n            index: index === 0 ? 50 : index * 100,\n            lightness: Math.round(lightness * 1000) / 1000,\n            chroma: Math.round(chroma_val * 1000) / 1000,\n            hue: Math.round(hue),\n            color: color.hex(),\n            x: x,\n            y: y,\n          };\n        });\n        \n        // Generate SVG polyline points for lightness curve\n        const lightnessCurve = lightnessData.map((d) => `${d.x},${d.y}`).join(' ');\n        \n        // Generate hue/chroma chart data with improved scaling\n        // Find max chroma to scale appropriately\n        const maxChroma = Math.max(...lightnessData.map(d => d.chroma || 0));\n        const chromaScale = maxChroma > 0 ? Math.min(300, 90 / maxChroma) : 300;\n        \n        const hueChromaData = lightnessData.map((d) => {\n          const radius = (d.chroma || 0) * chromaScale;\n          const angle = (((d.hue || 0) - 90) * Math.PI) / 180;\n          const x = 110 + Math.cos(angle) * radius;\n          const y = 110 - Math.sin(angle) * radius;\n          \n          return {\n            index: d.index,\n            x: Math.round(x),\n            y: Math.round(y),\n            color: d.color,\n            lightness: d.lightness,\n            chroma: d.chroma,\n            hue: d.hue,\n            maxChroma: maxChroma, // Include for debugging\n          };\n        });\n\n        handlebarsContext.colorRamps.push({\n          name: token.tokenId,\n          source: token.tokenValue.getSource(),\n          lightnessData: lightnessData,\n          lightnessCurve: lightnessCurve,\n          hueChromaData: hueChromaData,\n          values: token.tokenValue.value.map((x, i) => {\n            const color = x as Color;\n            let cls = color.luma() >= 1.0 ? 'frame ' : '';\n            if (color.luma() > 0.42) cls += 'light';\n            let opaqueColor: Color;\n            if (color.a < 1.0) {\n              opaqueColor = new Color(color);\n              opaqueColor.a = 1.0;\n            }\n            const deltaEWithPrevious =\n              previousColor && getDeltaE(color, previousColor);\n            previousColor = color;\n            return {\n              name: i === 0 ? '50' : i * 100,\n              cls,\n              value: color,\n              css: color.css(),\n              opaqueColor: opaqueColor?.css(),\n              deltaE:\n                deltaEWithPrevious < 2\n                  ? roundTo(deltaEWithPrevious, 2)\n                  : undefined,\n            };\n          }),\n        });\n      }\n    });\n    result += handlebars.compile(\n      fs.readFileSync(__dirname + '/templates/html-colors.hbs', 'utf-8')\n    )(handlebarsContext);\n  });\n\n  return result;\n}\n\nexport const StyleGuideFormat: { formats: { [key: string]: Format } } = {\n  formats: {\n    'html/colors': {\n      ext: '.html',\n      render: renderColorSection,\n    },\n    'html': {\n      ext: '.html',\n      render: (context: RenderContext): string =>\n        context.renderTemplate(\n          fs.readFileSync(__dirname + '/templates/html-file.hbs', 'utf-8'),\n          { ...context, 'color-section': renderColorSection(context) }\n        ),\n    },\n  },\n};\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  highlight: (code: string): string => highlight.highlightAuto(code).value,\n  pedantic: false,\n  gfm: true,\n  breaks: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  xhtml: false,\n});\n","// @todo: breakpoints (using a 'breakpoint:' instead of 'value:' property)\n// and media queries\n// @todo: compatibility with theo design tokens, support {!} style alias\n\nconst { cosmiconfigSync } = require('cosmiconfig');\nconst configParser = cosmiconfigSync('chromatic');\nconst glob = require('glob');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst yaml = require('yaml');\nconst json5 = require('json5');\nconst resolveFrom = require('resolve-from');\nconst handlebars = require('handlebars');\n\nimport { throwErrorIf, ErrorCode } from './errors';\nimport { getSuggestion } from './utils';\nimport { DefaultFormatters } from './default-formatters';\nimport {\n  Format,\n  TokenDefinition,\n  TokenGroupInfo,\n  DEFAULT_FILE_HEADER,\n  RenderContext,\n} from './formats';\nimport { Value, StringValue, isString, isColorArray, isColor } from './value';\nimport { parseValue, ValueParserOptions } from './value-parser';\n\nimport { GenericFormats } from './formats-generic';\nimport { WebFormats } from './formats-web';\nimport { StyleGuideFormat } from './formats-styleguide';\n\nimport { terminal } from './terminal';\n\n//\n// Type definitions\n//\n\ntype TokenGroup = { [token: string]: TokenDefinition | TokenGroup };\n\ninterface TokenFile {\n  theme?: string;\n  import: string | string[];\n  groups?: { [group: string]: TokenGroupInfo };\n  tokens: TokenGroup;\n}\n\n/** The configuration settings that can be defined in a configuration file\n */\n\ninterface Config extends ValueParserOptions {\n  tokenFileExt?: string;\n  verbose?: boolean;\n\n  /** All the themes to generate output for */\n  themes?: string[];\n\n  /** The default theme when none is provied */\n  defaultTheme?: string;\n\n  /** The output format */\n  outputFormat?: string;\n\n  /** If true, themes are output in separate files. Otherwise, they're\n   * combined in a single file\n   */\n  splitOutput?: boolean;\n\n  /** A list of custom output formats */\n  formats?: { [key: string]: Format };\n  handlebarsHelpers?: { [helper: string]: (...args: string[]) => string };\n\n  /** An object to output error and log messages to (defaults to the system\n   * console) */\n  console?: {\n    error: (m: string) => void;\n    log: (m: string) => void;\n  };\n  [key: string]: unknown;\n}\n\n/**\n * The parameters that can be specified in a token file, or overridden\n * as an option\n */\n// interface Settings {\n//     colorSimilarityThreshold: number;\n//     colorDeficiencySimilariryThreshold: number;\n// }\n\n/** The set of options that can be passed to the chromatic() function\n * or to the CLI tool\n */\ninterface Options {\n  /** If true, only do validation of token files and formats */\n  dryRun: boolean;\n\n  /** Path to a config file */\n  config: string;\n\n  /** A comma delimited list or an array of themes to be processed */\n  themes: string | string[];\n\n  /** The default file extension for token files (when scanning a directory */\n  tokenFileExt: string;\n\n  /** If true, output additional info during processing */\n  verbose: boolean;\n\n  /** Output format */\n  format: string;\n\n  /** Output file or directory */\n  output: string;\n\n  /** A map of custom helper function for handlebar templates */\n  handlebarsHelpers: { [helper: string]: (...args: string[]) => string };\n\n  /** If true, the process is in 'watch' mode */\n  watching: boolean;\n\n  /** If true, attempt to continue when an error is encountered */\n  ignoreErrors: boolean;\n\n  /** Header to include at the top of each generated file */\n  header: string;\n\n  /**  Split themes in multiple files. */\n  splitOutput?: boolean;\n\n  /** An object to capture error and log messages to (defaults to the system\n   * console) */\n  console?:\n    | {\n        error: (m: string) => void;\n        log: (m: string) => void;\n      }\n    | string;\n}\n\n//\n// Globals\n//\n\nconst gConfig: Config = {};\n\n/** True if in --watch mode */\nlet gWatching = false;\n\n/** True if an attempt to continue should be made after encountering an error */\nlet gIgnoreErrors = false;\n\n/** The themes and groups encountered while parsing */\nlet gThemes: string[];\n\n/** The groups encountered while parsing (and their associated metadata) */\nlet gGroups: Map<string, TokenGroupInfo>;\n\n/** The key is a token path ('semantic.warning') and the value is\n * the definition of the tokens, including its values (as Value objects)\n * for each theme it has a definition for (including the default theme, '_')\n */\nlet gTokenDefinitions: Map<string, TokenDefinition>;\n\n/** For a given qualified token (e.g. 'semantic.warning.dark'), its value */\nlet gTokenValues: Map<string, Value>;\n\n/**  The qualified token names that are in the process of being evaluated. Used to detect recursive definitions. */\nlet gRecursiveEvaluationStack: string[];\n\n/** Tokens that have failed to evaluate. */\n/* We keep track of them to avoid repetitive error messages */\nlet gErroredTokens: string[];\n\n/* Paths of the processed files (used to detect and prevent circular references) */\nlet gProcessedFiles: string[];\n\nfunction error(m: string | string[]): void {\n  if (typeof m === 'string') m = [m];\n\n  // If there are any carriage returns, break them up in separate array elements\n  const msg = '\\n' + [].concat(...m.map((x) => x.split('\\n'))).join('\\n    ');\n\n  gConfig.console?.error(terminal.autoFormat(msg));\n\n  if (!gWatching && !gIgnoreErrors) {\n    process.exit(1);\n  }\n}\n\nfunction log(m: string): void {\n  gConfig.console?.log(m);\n}\n\n/**\n * Merge \"source\" into object by doing a deep copy of enumerable properties.\n */\nfunction mergeObject(\n  object: Record<string, unknown>,\n  source: Record<string, unknown>\n): Record<string, unknown> {\n  if (object === source) return;\n  if (!source) return;\n  Object.keys(source).forEach((key) => {\n    if (Array.isArray(source[key])) {\n      if (!object[key]) object[key] = [];\n      object[key] = [\n        ...(object[key] as unknown[]),\n        ...(source[key] as unknown[]),\n      ];\n    } else if (typeof source[key] === 'object') {\n      // Object literal\n      if (!object[key]) object[key] = {};\n      mergeObject(\n        object[key] as Record<string, unknown>,\n        source[key] as Record<string, unknown>\n      );\n    } else if (typeof source[key] !== 'undefined') {\n      object[key] = source[key];\n    }\n  });\n}\n\n/**\n * Return a normalized token value, with default theme applied\n *\n */\nfunction normalizeToken(\n  defaultTheme: string,\n  entry: string | TokenDefinition\n): TokenDefinition {\n  if (\n    typeof entry !== 'string' &&\n    (typeof entry !== 'object' || !entry.value)\n  ) {\n    return undefined;\n  }\n  let result: TokenDefinition = { value: {} };\n  if (typeof entry === 'string') {\n    result.value._ = entry;\n  } else {\n    result = { ...entry };\n  }\n  if (typeof result.value === 'string') {\n    result.value = { _: result.value };\n  }\n\n  // If there is a default theme, apply it now\n  if (defaultTheme && result.value['_']) {\n    result.value[defaultTheme] = result.value['_'];\n    result.value['_'] = undefined;\n  }\n\n  Object.keys(result.value).forEach((theme) => {\n    if (!gThemes.includes(theme)) {\n      gThemes.push(theme);\n    }\n  });\n\n  return result;\n}\n\n/**\n * Evaluate an expression (e.g. \"18pt + 5px\" or \"darken(crimson)\") and\n * return a corresponding value.\n *\n * Aliases (denoted by a pair of curly brackets) are resolved.\n *\n */\nfunction evaluateTokenExpression(\n  qualifiedToken: string,\n  expression: string,\n  theme: string\n): Value {\n  if (!expression) return undefined;\n  if (gErroredTokens.includes(qualifiedToken)) return undefined;\n\n  try {\n    throwErrorIf(\n      gRecursiveEvaluationStack.includes(qualifiedToken),\n      ErrorCode.CircularDefinition,\n      qualifiedToken\n    );\n\n    gRecursiveEvaluationStack.push(qualifiedToken);\n\n    const result = parseValue(expression, {\n      ...gConfig,\n      aliasResolver: (identifier): Value | string => {\n        // If we have already evaluated this token, return its value\n        let aliasValue: Value;\n        if (theme) {\n          if (gTokenValues.has(identifier + '.' + theme))\n            return gTokenValues.get(identifier + '.' + theme);\n          if (gTokenDefinitions.has(identifier)) {\n            // There is a token definition with that name\n            // Let's try for a value for the current theme\n            aliasValue = evaluateTokenExpression(\n              identifier + '.' + theme,\n              gTokenDefinitions.get(identifier)?.value[theme] ??\n                gTokenDefinitions.get(qualifiedToken)?.value['_'],\n              theme\n            );\n          }\n          if (aliasValue) return aliasValue;\n        }\n        if (gTokenValues.has(identifier)) return gTokenValues.get(identifier);\n\n        // The token 'identifier' has not been evaluated yet.\n        // Let's try to evaluate it now.\n        if (gTokenDefinitions.has(identifier)) {\n          // There is a token definition with that name\n          // Let's try for a value for the current theme\n          if (theme) {\n            aliasValue = evaluateTokenExpression(\n              identifier + '.' + theme,\n              gTokenDefinitions.get(identifier)?.value[theme],\n              theme\n            );\n          }\n          // If that didn't work, try a default value\n          if (!aliasValue) {\n            aliasValue = evaluateTokenExpression(\n              identifier,\n              gTokenDefinitions.get(qualifiedToken)?.value['_'],\n              theme\n            );\n          }\n        }\n        return aliasValue ?? getSuggestion(identifier, gTokenDefinitions);\n      },\n    });\n    gRecursiveEvaluationStack.pop();\n\n    return result;\n  } catch (err) {\n    if (!gErroredTokens.includes(qualifiedToken)) {\n      gErroredTokens.push(qualifiedToken);\n      error([\n        terminal.error('Syntax error') +\n          ` in \"${qualifiedToken + \": '\" + expression}\\'\"`,\n        err.message,\n      ]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Process an object literal that contains a group of tokens\n *\n * @param tokenFile - A parsed token file\n * @param groupPath - A dot separated path to this group, if not at root\n * @param tokens - A key/value map of token names and values\n */\nfunction processTokenGroup(\n  tokenFile: TokenFile,\n  groupPath: string,\n  tokens: Record<string, string | TokenDefinition | TokenGroup>\n): void {\n  throwErrorIf(\n    Array.isArray(tokens),\n    ErrorCode.UnexpectedTokensArray,\n    terminal.link('tokens-as-array')\n  );\n\n  if (!gGroups.has(groupPath)) {\n    gGroups.set(groupPath, {});\n  }\n  Object.keys(tokens).forEach((token) => {\n    const tokenPath = (groupPath ? groupPath + '.' : '') + token;\n    throwErrorIf(\n      !/^[a-zA-Z_-][a-zA-Z0-9_-]*$/.test(token),\n      ErrorCode.InvalidTokenName,\n      tokenPath\n    );\n    throwErrorIf(!tokens[token], ErrorCode.InvalidTokenValue, token);\n    try {\n      const normalizedToken = normalizeToken(\n        tokenFile.theme ?? gConfig.defaultTheme,\n        tokens[token] as string | TokenDefinition\n      );\n      if (!normalizedToken) {\n        // If it's not a token, it's a group of tokens\n        processTokenGroup(tokenFile, tokenPath, tokens[token] as TokenGroup);\n      } else {\n        if (!gTokenDefinitions.has(tokenPath)) {\n          gTokenDefinitions.set(tokenPath, normalizedToken);\n        } else {\n          // Merge the new definition with the previous one\n          const mergedToken = gTokenDefinitions.get(tokenPath);\n          mergeObject(mergedToken, normalizedToken);\n          gTokenDefinitions.set(tokenPath, mergedToken);\n        }\n      }\n    } catch (err) {\n      throw new Error(`${tokenPath}: \"${tokens[token]}\"\\n${err.message}`);\n    }\n  });\n}\n\n/**\n * @param  f    - path to a file or directory. If a directory,\n * its content are recursively walked and parsed\n *\n * The result of the processing is accumulated in gTokenDefinitions.\n *\n */\nfunction processPath(f: string): void {\n  const errors: string[] = [];\n  f = path.resolve(path.normalize(f));\n\n  // Avoid processing the same file (or directory) more than once\n  if (gProcessedFiles.includes(f)) return;\n  gProcessedFiles.push(f);\n\n  // If the path to process is a directory, process (recursively) all the\n  // token files it contains.\n  if (fs.lstatSync(f).isDirectory()) {\n    glob.sync(f + '/**/*' + gConfig.tokenFileExt).forEach(processPath);\n    return;\n  }\n\n  //\n  // 1. Read the token file\n  //\n\n  let tokenFile: TokenFile;\n\n  try {\n    const content = fs.readFileSync(f, 'utf8');\n    if (/^\\.json/.test(path.extname(f))) {\n      // If the extension is \".json\", \".jsonc\", \".json5\", etc.., attempt to read it as a JSON5 file\n      tokenFile = json5.parse(content);\n    } else {\n      tokenFile = yaml.parse(content);\n    }\n  } catch (err) {\n    errors.push((err.name ? err.name + ': ' : '') + err.message);\n  }\n\n  //\n  // 2. Process any 'import' directive\n  //\n  if (tokenFile?.import) {\n    if (typeof tokenFile.import === 'string') {\n      tokenFile.import = [tokenFile.import];\n    }\n    if (Array.isArray(tokenFile.import)) {\n      tokenFile.import.forEach((x: any) => {\n        let resolvedPath = f;\n        try {\n          resolvedPath = resolveFrom(path.parse(f).dir, x);\n          processPath(resolvedPath);\n        } catch (err) {\n          errors.push(`option \"import: ${x}\"`);\n          if (err.code === 'MODULE_NOT_FOUND') {\n            errors.push(\n              'Module not found.' +\n                (x.slice(0, 2) === './'\n                  ? ''\n                  : `\\nTo import as a file, use a relative path: \"./${x}\"`)\n            );\n          } else if (err.code === 'ENOENT') {\n            errors.push(\n              '→ ' + terminal.path(resolvedPath) + '\\nFile not found.'\n            );\n          } else {\n            errors.push(err.message);\n          }\n        }\n      });\n    } else {\n      errors.push('Option \"import\" should be a path or an array of paths');\n    }\n  }\n\n  if (\n    tokenFile &&\n    gConfig.verbose &&\n    (tokenFile['imports'] ||\n      tokenFile['extends'] ||\n      tokenFile['include'] ||\n      tokenFile['includes']) &&\n    !tokenFile.import\n  ) {\n    log(\n      terminal.warning() +\n        terminal.path(path.relative('', f)) +\n        `\\n${terminal.warning(\n          'Warning:'\n        )} use the \\`\"import\"\\` property to import other token files`\n    );\n  }\n\n  //\n  // 3. Process group declarations\n  //\n  if (tokenFile?.groups) {\n    Object.keys(tokenFile.groups).forEach((group) => {\n      if (gGroups.has(group)) {\n        const info = gGroups.get(group);\n        info.name = tokenFile.groups[group].name ?? info.name;\n        info.comment =\n          (info.comment ? info.comment + '\\n' : '') +\n          tokenFile.groups[group].comment;\n        info.remarks =\n          (info.remarks ? info.remarks + '\\n' : '') +\n          tokenFile.groups[group].remarks;\n        gGroups.set(group, info);\n      } else {\n        gGroups.set(group, tokenFile.groups[group]);\n      }\n    });\n  }\n\n  //\n  // 4. Process any token declaration\n  //\n  if (tokenFile?.tokens) {\n    throwErrorIf(\n      typeof tokenFile.tokens !== 'object',\n      ErrorCode.UnexpectedTokensType\n    );\n    try {\n      processTokenGroup(tokenFile, '', tokenFile.tokens);\n    } catch (err) {\n      errors.push(err.message);\n    }\n  }\n\n  //\n  // 5. Display any accumulated errors\n  //\n  if (gConfig.verbose && errors.length === 0) {\n    log(\n      terminal.success() +\n        '← ' +\n        terminal.path(\n          process.env.TEST ? path.basename(f) : path.relative('', f)\n        )\n    );\n  }\n  if (errors.length > 0) {\n    error([\n      terminal.error() +\n        '← ' +\n        terminal.path(\n          process.env.TEST ? path.basename(f) : path.relative('', f)\n        ),\n      ...errors,\n    ]);\n  }\n}\n\nfunction areThemesValid(): boolean {\n  // Filter out themes\n  if (gConfig.themes?.length > 0) {\n    gThemes = gThemes.filter((x) => gConfig.themes.includes(x));\n  }\n\n  // Check\n  gThemes.forEach((theme) => {\n    let count = 0;\n    gTokenDefinitions.forEach((entry, _token) => {\n      if (typeof entry.value[theme] !== 'undefined') {\n        count += 1;\n      }\n    });\n    if (count === 0) {\n      gThemes.splice(gThemes.indexOf(theme), 1);\n    }\n  });\n\n  if (gThemes.length === 0 || gTokenDefinitions.size === 0) {\n    error([\n      terminal.error('No tokens found.'),\n      `Token files should have a \"${'tokens'}\" property`,\n      terminal.link('../guide'),\n    ]);\n    return false;\n  }\n\n  return true;\n}\n\nfunction getFormat(formatName: string): Format {\n  const result: Format = {\n    fileHeader: DEFAULT_FILE_HEADER,\n    formatFilename: function ({\n      theme,\n      basename,\n    }: {\n      theme: string;\n      basename: string;\n    }): string {\n      return basename + (!theme ? '' : '-' + theme);\n    },\n    handlebarsHelpers: { ...gConfig.handlebarsHelpers },\n    render: (_context: RenderContext): string =>\n      'Expected a render() function in the Format definition.',\n  };\n\n  //\n  // 1. Check that the format exists\n  //\n  throwErrorIf(\n    !gConfig.formats[formatName],\n    ErrorCode.UnknownFormat,\n    formatName,\n    getSuggestion(formatName, gConfig.formats)\n  );\n\n  //\n  // 2. If this format extends another format,\n  //    merge the base format\n  //\n  const baseFormat = gConfig.formats[formatName].extends;\n  if (baseFormat) {\n    throwErrorIf(\n      !gConfig.formats[baseFormat],\n      ErrorCode.UnknownFormat,\n      baseFormat,\n      getSuggestion(baseFormat, gConfig.formats)\n    );\n\n    mergeObject(result, gConfig.formats[baseFormat]);\n  }\n\n  //\n  // 3. Add the override from this format\n  //\n  mergeObject(result, gConfig.formats[formatName]);\n\n  //\n  // 4. Register the handlebar helpers\n  //\n\n  // A handlebarsHelper can be defined:\n  // - in a config file\n  // - passed in as options to chromatic()\n  // - in a format definition\n\n  Object.keys(result.handlebarsHelpers).forEach((helper) => {\n    handlebars.registerHelper(helper, result.handlebarsHelpers[helper]);\n  });\n\n  return result;\n}\n\nfunction renderFile(\n  format: Format,\n  themes: string[],\n  filepath: string\n): string {\n  const tokens = [];\n  gTokenDefinitions.forEach((def, token) => {\n    Object.keys(def.value).forEach((tokenTheme) => {\n      if (themes.includes(tokenTheme)) {\n        tokens.push(tokenTheme === '_' ? token : token + '.' + tokenTheme);\n      }\n    });\n  });\n\n  //\n  // 1. Aggregate the tokens by group\n  //\n  const tokensByGroup = [];\n\n  gGroups.forEach((info, group) => {\n    const groupTokens = [...gTokenDefinitions].filter(([token, _def]) =>\n      group ? token.startsWith(group + '.') : !/\\./.test(token)\n    );\n    tokensByGroup.push({\n      groupId: group,\n      groupInfo: info,\n      tokens: groupTokens.map(([tokenId, tokenDefinition]) => {\n        return {\n          tokenId,\n          tokenDefinition,\n          themes: themes\n            .map((theme) => {\n              const qualifiedToken =\n                tokenId + (theme === '_' ? '' : '.' + theme);\n              return {\n                theme: theme,\n                tokenName: qualifiedToken,\n                tokenValue: gTokenValues.get(qualifiedToken),\n              };\n            })\n            .filter((x) => x.tokenValue),\n        };\n      }),\n    });\n  });\n\n  //\n  // 2. Aggregate the tokens by theme\n  //\n  const tokensByTheme = {};\n  gTokenDefinitions.forEach((def, tokenId) => {\n    if (Object.keys(def.value).length > 1) {\n      Object.keys(def.value).forEach((theme) => {\n        if (!tokensByTheme[theme]) tokensByTheme[theme] = [];\n        const qualifiedToken = tokenId + (theme === '_' ? '' : '.' + theme);\n        tokensByTheme[theme].push({\n          tokenId: tokenId,\n          isColor: isColor(gTokenValues.get(qualifiedToken)),\n          tokenName: qualifiedToken,\n          tokenDefinition: def,\n          tokenValue: gTokenValues.get(qualifiedToken),\n        });\n      });\n    } else {\n      const theme = Object.keys(def.value)[0];\n      const qualifiedToken = tokenId + (theme === '_' ? '' : '.' + theme);\n      if (!tokensByTheme['']) tokensByTheme[''] = [];\n      const value = gTokenValues.get(qualifiedToken);\n      tokensByTheme[''].push({\n        tokenId: tokenId,\n        isColor: isColor(value),\n        tokenName: qualifiedToken,\n        tokenDefinition: def,\n        tokenValue: value,\n      });\n      if (isColorArray(value)) {\n        let index = 50;\n        for (const v of value.value) {\n          tokensByTheme[''].push({\n            tokenId: tokenId + '-' + index,\n            isColor: isColor(v),\n            tokenName: qualifiedToken + '-' + index,\n            tokenDefinition: def,\n            tokenValue: v,\n          });\n          index += index < 100 ? 50 : 100;\n        }\n      }\n    }\n  });\n\n  //\n  // 3. Render the file\n  //\n  return format.render({\n    filepath,\n    fileHeader: format.fileHeader,\n    themes: Object.keys(tokensByTheme).map((theme) => {\n      return {\n        theme,\n        isDefaultTheme: theme === '_',\n        tokens: tokensByTheme[theme],\n      };\n    }),\n    groups: tokensByGroup,\n    renderTemplate: (template: string, context: RenderContext): string =>\n      handlebars.compile(template.replace(/\\r\\n/g, '\\n'))(context),\n  });\n}\n\nfunction render(\n  baseOutputPath: string,\n  format: Format\n): { [filename: string]: string } {\n  const result = {};\n  let outputPath = '';\n\n  // Check that there are tokens in each of the themes\n  if (!areThemesValid()) return;\n\n  const pathRecord = (baseOutputPath && path.parse(baseOutputPath)) ?? {\n    name: 'tokens',\n  };\n\n  if (gConfig.splitOutput) {\n    // Output one file per theme\n    gThemes.forEach((theme) => {\n      outputPath = path.format({\n        dir: pathRecord.dir,\n        name: format.formatFilename({\n          theme: theme,\n          basename: pathRecord.name,\n        }),\n        ext: format.ext,\n      });\n      result[outputPath] = renderFile(format, [theme], outputPath);\n    });\n  } else {\n    // Output a single file for all themes\n    outputPath = path.format({\n      dir: pathRecord.dir,\n      name: format.formatFilename({\n        theme: '',\n        basename: pathRecord.name,\n      }),\n      ext: format.ext,\n    });\n    result[outputPath] = renderFile(format, gThemes, outputPath);\n  }\n\n  return result;\n}\n\nfunction writeOutputFile(content: string, outputPath: string): void {\n  const dirname = path.dirname(outputPath);\n  if (!fs.existsSync(dirname)) {\n    fs.mkdirsSync(dirname);\n  }\n  fs.writeFileSync(outputPath, content);\n  if (gConfig.verbose || gWatching) {\n    log(\n      terminal.success() +\n        (gWatching ? terminal.time() + ' ' : '') +\n        '→ ' +\n        terminal.path(path.relative('', outputPath))\n    );\n  }\n}\n\n/**\n * @returns A map where the key is a filename and the value is\n * the content of the file.\n */\nfunction build(\n  paths: string[],\n  options: Options\n): { [filename: string]: string } {\n  //\n  // 1. Process each file or directory\n  //\n  //    Parse the token files and accumulate the qualified token names\n  //    (dot-separated paths) with their normalized definition (TokenDefinition)\n  //    in gTokenDefinitions (in a normalized definition, the default theme has been applied, replacing '_')\n  //\n  gWatching = options?.watching ?? false;\n\n  gThemes = [];\n  gTokenDefinitions = new Map();\n  gGroups = new Map();\n  gTokenValues = new Map();\n  gRecursiveEvaluationStack = [];\n  gProcessedFiles = [];\n  gErroredTokens = [];\n\n  paths.forEach((x: string): void => {\n    const files = glob.sync(x);\n    if (files.length === 0) {\n      error(terminal.error('File not found: ') + terminal.path(x));\n      return;\n    }\n    files.forEach(processPath);\n  });\n\n  //\n  // 2. Evaluate the tokens\n  //\n\n  // 2.1 First pass\n  // Evaluate the token value expressions, including aliases,\n  // except in strings. Store the result in gTokenValues.\n  try {\n    gTokenDefinitions.forEach((def, token) => {\n      Object.keys(def.value).forEach((theme) => {\n        const qualifiedToken = token + (theme === '_' ? '' : '.' + theme);\n        const value =\n          evaluateTokenExpression(\n            qualifiedToken,\n            def.value[theme],\n            gConfig.defaultTheme\n          ) ?? new StringValue(def.value[theme]);\n\n        gTokenValues.set(qualifiedToken, value);\n\n        if (def.type && value.type() != def.type) {\n          log(\n            terminal.warning('Warning:') +\n              ` Type mismatch. Expected \\`${\n                def.type\n              }\\` but got \\`${value.type()}\\` for \"${qualifiedToken}\" token`\n          );\n        }\n\n        // @todo: cross-check category\n      });\n    });\n\n    // 2.2\n    // For any string that may still contain an alias, replace the\n    // alias reference with its value\n    gTokenValues.forEach((value, _token) => {\n      if (isString(value)) {\n        value.value = value.value.replace(/{[a-zA-Z0-9\\._-]+}/g, (match) => {\n          const alias = match.slice(1, -1);\n          if (gTokenValues.has(alias)) {\n            return gTokenValues.get(alias).css();\n          }\n\n          error(\n            terminal.error('Unresolved alias. ') +\n              `Cannot find token \"${match}\"` +\n              getSuggestion(alias, gTokenValues)\n          );\n          return match;\n        });\n      }\n    });\n\n    // 2.3 Calculate missing values for each theme\n    gTokenDefinitions.forEach((def, token) => {\n      gThemes.forEach((theme) => {\n        if (theme !== '_' && typeof def.value[theme] === 'undefined') {\n          const qualifiedToken = token + '.' + theme;\n          const value =\n            evaluateTokenExpression(qualifiedToken, def.value['_'], theme) ??\n            new StringValue(def.value['_']);\n          gTokenValues.set(qualifiedToken, value);\n        }\n      });\n    });\n\n    // 2.4 Eliminate any themed values that are the same as base\n    // Steps 2.3 and 2.4 are necessary to handle this case:\n    /* ``` \n    hue:\n        value:\n            _: \"0deg\"\n            dark: \"10deg\"\n    primary: \"hsl({hue}, 50%, 50%)\"\n*/\n    // Since the expression to calculate value depends on a token that does\n    // have a theme variant, primary also needs to have a theme variant\n    gTokenDefinitions.forEach((_def, token) => {\n      gThemes.forEach((theme) => {\n        if (theme !== '_') {\n          const qualifiedToken = token + '.' + theme;\n          if (\n            gTokenValues.get(token)?.equals(gTokenValues.get(qualifiedToken))\n          ) {\n            gTokenValues.delete(qualifiedToken);\n          }\n        }\n      });\n    });\n\n    // 2.5 Validate that all the types for a given definition are consistent\n    gTokenDefinitions.forEach((def, token) => {\n      const types = Object.keys(def.value).reduce(\n        (acc: string[], x: string): string[] => {\n          const qualifiedToken = x === '_' ? token : token + '.' + x;\n          if (!acc.includes(gTokenValues.get(qualifiedToken)?.type()))\n            acc.push(gTokenValues.get(qualifiedToken)?.type());\n          return acc;\n        },\n        []\n      );\n      // If there's more than one type for the values of this definition,\n      // throw\n      throwErrorIf(types.length > 1, ErrorCode.InconsistentTokenType, token);\n    });\n\n    //\n    // 3. Format and output\n    //\n    // 3.1 Determine the output format\n\n    const format = getFormat(gConfig.outputFormat);\n\n    // Override format settings from options\n    format.fileHeader = options.header ?? format.fileHeader;\n\n    //\n    // 3.2. Render the properties\n    //\n    const outputPath = options?.output && path.resolve(options.output);\n    const content = render(outputPath, format);\n\n    //\n    // 3.3. Write the files\n    //\n    if (content && !options?.dryRun) {\n      if (!outputPath) {\n        return content;\n      } else {\n        if (gConfig.verbose) {\n          let themesMessage = '';\n          if (gThemes.length !== 1 || gThemes[0] !== '_') {\n            if (gThemes.length === 1) {\n              themesMessage = `for theme \"${gThemes[0]}\"`;\n            } else {\n              themesMessage =\n                'for themes ' + gThemes.map((x) => '\"' + x + '\"').join(', ');\n            }\n          }\n          log(\n            `    Writing ${terminal.string(\n              gConfig.outputFormat\n            )} format ${themesMessage}`\n          );\n        }\n        Object.keys(content).forEach((file) => {\n          writeOutputFile(content[file], file);\n        });\n      }\n    }\n  } catch (err) {\n    error(terminal.error(err.message));\n  }\n  return {};\n}\n\n/**\n * The main entry point of Chromatic.\n *\n * @param paths - A list of files or directories to process\n * @returns If the result is a single file, the content of the\n * file as a string. Otherwise, a map of key/values, where the\n * key is the file name and the value is the content.\n *\n */\n\nexport function chromatic(\n  paths: string | string[],\n  options: Options\n): { [filename: string]: string } {\n  if (typeof paths === 'string') {\n    paths = [paths];\n  }\n\n  //\n  // 1. Load from 'standard' config locations\n  //\n  let configResult = configParser.search();\n  if (!(configResult?.isEmpty ?? true)) {\n    mergeObject(gConfig, configResult.config);\n  }\n\n  //\n  // 2. If a config file is specified, merge with previous config\n  //\n  if (options?.config) {\n    configResult = configParser.load(options.config);\n    if (!(configResult?.isEmpty ?? true)) {\n      mergeObject(gConfig, configResult.config);\n    }\n  }\n\n  //\n  // 3. If options are specified, merge with previous config\n  //\n  if (options?.themes) {\n    if (typeof options.themes === 'string') {\n      gConfig.themes = options.themes.split(',').map((x: string) => x.trim());\n    } else if (Array.isArray(options.themes)) {\n      gConfig.themes = [...options.themes];\n    }\n  }\n\n  gIgnoreErrors = options?.ignoreErrors ?? false;\n\n  // Configure the console/logger\n  const messages: string[] = [];\n  if (typeof options?.console === 'string') {\n    if (options?.console === 'log') {\n      terminal.useColor(false);\n      gConfig.console = {\n        log: (m: string): void => {\n          messages.push(m);\n        },\n        error: (m: string): void => {\n          messages.push(m);\n        },\n      };\n    }\n  } else {\n    gConfig.console = options?.console ?? {\n      // Output \"log\" (i.e. warnings) message to stdout (console.error)\n      log: (m: string): void => console.error(m),\n      error: (m: string): void => console.error(m),\n    };\n  }\n\n  if (!gConfig.themes) gConfig.themes = [];\n\n  gConfig.tokenFileExt =\n    options?.tokenFileExt ?? gConfig?.tokenFileExt ?? 'yaml';\n\n  gConfig.verbose = options?.verbose ?? gConfig?.verbose ?? false;\n\n  gConfig.splitOutput = options.splitOutput;\n\n  gConfig.outputFormat = options?.format ?? gConfig?.outputFormat ?? '';\n\n  if (!gConfig.outputFormat) {\n    // Try to guess the format based on the extension of the output file\n    const fileExt = options?.output && path.extname(options?.output);\n    if (fileExt) {\n      const matchingExtensions = Object.keys(gConfig.formats).filter(\n        (x) =>\n          gConfig.formats[x].ext === fileExt ||\n          gConfig.formats[gConfig.formats[x]?.extends]?.ext\n      );\n      if (matchingExtensions.length === 1) {\n        gConfig.outputFormat = matchingExtensions[0];\n      } else {\n        // Multiple (or no) format can output to this extension.\n        // If there is one whose name is exactly the extension, use it.\n        if (gConfig.formats[fileExt.slice(1)]) {\n          gConfig.outputFormat = fileExt.slice(1);\n        } else if (matchingExtensions.length > 1) {\n          error([\n            terminal.error('Ambiguous format. ') +\n              `Use ${terminal.keyword(\n                '--format'\n              )} to indicate which output format to use.`,\n            `Did you mean \\`${matchingExtensions.join(', ')}\\`?`,\n          ]);\n        }\n      }\n    }\n\n    if (gConfig.outputFormat) {\n      if (gConfig.verbose) {\n        log(\n          terminal.warning() +\n            `Setting the format to \"gConfig.outputFormat\" based on the output file extension. ` +\n            'Use `--format` to indicate which output format to use.'\n        );\n      }\n    } else {\n      gConfig.outputFormat = 'yaml';\n      log(\n        terminal.warning('Format not specified.') +\n          ` Using \"${terminal.keyword('yaml')}\". ` +\n          `Use ${terminal.keyword(\n            '--format'\n          )} to indicate which output format to use.`\n      );\n    }\n  }\n\n  // Merge any custom handlebars helpers\n  mergeObject(gConfig.handlebarsHelpers, options?.handlebarsHelpers);\n\n  const result = build(paths, options);\n  if (messages.length > 0) {\n    result['stderr'] = messages.join('\\n');\n  }\n  return result;\n}\n\nmergeObject(gConfig, DefaultFormatters);\nmergeObject(gConfig, WebFormats);\nmergeObject(gConfig, GenericFormats);\nmergeObject(gConfig, StyleGuideFormat);\n\nmodule.exports = chromatic;\n","const pkg = require('./package.json');\nrequire('please-upgrade-node')(pkg);\n\nimport { chromatic } from './chromatic';\nimport { terminal } from './terminal';\nconst fs = require('fs-extra');\nconst path = require('path');\nconst updateNotifier = require('update-notifier');\n\nconst chokidar = require('chokidar');\n\nfunction logResult(result: { [file: string]: string }): void {\n  console.log(\n    Object.keys(result)\n      .map(\n        (x) =>\n          (x === 'stderr' ? terminal.error() : terminal.success()) +\n          '>>>> ' +\n          terminal.path(x) +\n          '\\n' +\n          result[x]\n      )\n      .join('\\n')\n  );\n}\n\nfunction build(argv): void {\n  if (typeof process.stdin.isTTY !== 'undefined' && !process.stdin.isTTY) {\n    // The command was piped, e.g.\n    // `echo \"foo\" | chromatic`\n    process.stdin.setEncoding('utf-8');\n    let input = '';\n    process.stdin.on('readable', function () {\n      let chunk: string;\n      while ((chunk = process.stdin.read())) {\n        input += chunk;\n      }\n    });\n\n    process.stdin.on('end', function () {\n      logResult(chromatic(input, argv));\n    });\n  } else {\n    // The command was not piped\n    if (!argv['paths'] || argv['paths'].length < 1) {\n      console.error(\n        terminal.error() +\n          `Expected at least one path to a directory or token file.\\n` +\n          `    Use ${terminal.keyword(\n            argv.$0 + ' help'\n          )} for available options.\\n`,\n        `   Use ${terminal.keyword(\n          argv.$0 + ' example'\n        )} to create an example directory.`\n      );\n      process.exit(1);\n    }\n\n    if (argv.watch) {\n      chokidar.watch(argv['paths']).on('all', (_event: any, _path: string) => {\n        chromatic(argv['paths'], {\n          ...argv,\n          ...{ watching: true },\n        });\n        console.log(\n          terminal.time() +\n            ` ${terminal.dim(argv.$0)}: Waiting for changes...\\n${terminal.dim(\n              'Press Ctrl-C to exit.'\n            )}`\n        );\n      });\n    } else {\n      logResult(chromatic(argv['paths'], argv));\n    }\n  }\n}\n\nfunction buildOptions(yargs): void {\n  yargs\n    .positional('<path>', {\n      describe: 'Path to a token file or directory',\n      type: 'string',\n    })\n    .option('output', {\n      alias: 'o',\n      describe: 'Save output to path',\n      type: 'path',\n    })\n    .normalize('output')\n    .option('format', {\n      alias: 'f',\n      describe: 'Output format: css|sass|js|yaml|json',\n      type: 'string',\n    })\n    .option('header', {\n      describe: 'Content inserted at the to of the output file',\n      type: 'string',\n    })\n    .option('themes', {\n      describe: 'Comma separated list of themes to process',\n      type: 'string',\n    })\n    .option('split-output', {\n      describe:\n        'If there are multiple themes, output one file per theme. Otherwise the themes are combined in a single file.',\n      type: 'boolean',\n      default: false,\n    })\n    .option('token-file-ext', {\n      describe: 'Default file extension of token files',\n      type: 'string',\n      default: '.yaml',\n    })\n    .option('dry-run', {\n      describe:\n        \"Validate the token files, attempt to generate the specified file format, but don't output anything\",\n      conflicts: 'output',\n      type: 'boolean',\n    })\n    .option('config', {\n      describe: 'Load config file from path',\n      type: 'path',\n    })\n    .normalize('config')\n    .option('verbose', {\n      describe: 'Display additional information during processing',\n      type: 'boolean',\n    })\n    .option('no-color', {\n      describe: 'Suppress color output in terminal',\n      type: 'boolean',\n    })\n    .option('ignore-errors', {\n      alias: 'i',\n      describe: 'Attempt to continue when an error is encountered',\n      type: 'boolean',\n    })\n    .option('watch', {\n      describe: 'Watch for changes to the token files and rebuild',\n      type: 'boolean',\n    });\n}\n\nfunction example(argv): void {\n  const target = path.resolve(argv['example-directory'] ?? 'chromatic-example');\n  console.log('Creating an example in ' + path.relative('', target));\n  try {\n    fs.copySync('examples/basic', target, {\n      overwrite: false,\n      errorOnExist: true,\n    });\n    console.log(\n      'Now, try the example:\\n' +\n        '    ' +\n        terminal.keyword(\n          argv.$0 + ' ' + path.relative('', target) + ' -o ./build/tokens.scss'\n        ) +\n        '\\nor:\\n' +\n        '    ' +\n        terminal.keyword(\n          argv.$0 + ' ' + path.relative('', target) + ' -o ./build/tokens.html'\n        )\n    );\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\n// Display an update message if a more recent version of the package is\n// available.\nupdateNotifier({ pkg, shouldNotifyInNpmScript: true }).notify();\n\nrequire('yargs')\n  .usage('Usage: $0 file(s) [options]')\n  .example(\n    '$0 ./assets/tokens.yaml -o ./build/tokens.scss',\n    'Generate a Sass file from a design tokens YAML file'\n  )\n  .command(\n    ['* <paths..>', 'build <paths..>'],\n    'Build output files',\n    buildOptions,\n    build\n  )\n  .command(\n    'example [example-directory]',\n    'Create example directory',\n    (yargs) => {\n      yargs.positional('example-directory', {\n        describe: 'Example output directory',\n        type: 'string',\n      });\n    },\n    example\n  )\n  .command(\n    'help',\n    'Show help',\n    () => {\n      return;\n    },\n    (yargs) => yargs.help()\n  )\n\n  .help('h')\n  .alias('h', 'help')\n  .epilog(\n    'For more information, see https://github.com/arnog/chromatic/docs/guide.md'\n  )\n  .strict(true).argv;\n"],"names":["chroma","fs","handlebars","path","build"],"mappings":"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"}