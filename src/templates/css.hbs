{{comment fileHeader}}
{{#each themes}}
  {{#if theme}}

    {{! Output css classes corresponding to the property... }}
    {{#if isDefaultTheme}}
      {{#each tokens}}
        .{{sanitizeCssPropertyName tokenName}}
        { color:
        {{cssValue tokenValue}}; }
      {{/each}}
    {{/if}}

    {{! This is a themed tokens (multiple definitions }}
    {{#if isDefaultTheme}}
      {{! The current theme is the default theme ('_') }}
      :root {
    {{else}}
      {{! The current theme is a custom }}
      body[data-theme="{{theme}}"] {
    {{/if}}

    {{#each tokens}}
      {{! Output a custom property }}
      {{#if isColor}}
      --{{sanitizeCssPropertyName tokenId}}: {{{cssValue tokenValue}}};
      {{/if}}
    {{/each}}

    };

  {{else}}

    {{! Output all tokens that have a single definition (no theme) as a CSS variable}}

    :root {
      {{#each tokens}}
        {{! Output a custom property }}
      {{#if isColor}}
      --{{sanitizeCssPropertyName tokenId}}: {{{cssValue tokenValue}}};
      {{/if}}
      {{/each}}
    }


    {{#each tokens}}
      {{#if isColor}}
      {{#if tokenDefinition.comment}}
        {{comment tokenDefinition.comment '//'}}
      {{/if}}
      .{{sanitizeCssPropertyName tokenName}}
      { color: var(--{{sanitizeCssPropertyName tokenName}}); }
      {{/if}}
    {{/each}}

  {{/if}}
{{/each}}